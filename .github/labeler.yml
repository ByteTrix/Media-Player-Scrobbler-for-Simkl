# Configuration for the PR Labeler action (actions/labeler)
# https://github.com/actions/labeler

# Label: 'feature'
# Apply to PRs modifying code within the main application package.
feature:
- changed-files:
  - any-glob-to-any-file: 'simkl_mps/**/*.py'
  - any-glob-to-any-file: 'simkl_mps/**/*.py'

# Label: 'documentation'
# Apply to PRs modifying documentation files (in /docs or any .md/.rst file).
documentation:
- changed-files:
  - any-glob-to-any-file: 'docs/**/*'
  - any-glob-to-any-file: '**/*.md'
  - any-glob-to-any-file: '**/*.rst'

# Label: 'workflow'
# Apply to PRs modifying GitHub Actions workflow files.
workflow:
- changed-files:
  - any-glob-to-any-file: '.github/workflows/**/*'
  - any-glob-to-any-file: '.github/*.yml' # Include top-level config like labeler.yml itself

# Label: 'test'
# Apply to PRs modifying test files.
test:
- changed-files:
  - any-glob-to-any-file: 'tests/**/*' # Files in the main tests directory
  - any-glob-to-any-file: 'simkl_mps/**/*_test.py' # Test files ending with _test.py
  - any-glob-to-any-file: 'simkl_mps/**/test_*.py' # Test files starting with test_
  - any-glob-to-any-file: 'simkl_mps/**/*_test.py' # Test files ending with _test.py
  - any-glob-to-any-file: 'simkl_mps/**/test_*.py' # Test files starting with test_

# Label: 'dependencies'
# Apply to PRs modifying dependency definition files.
dependencies:
- changed-files:
  - any-glob-to-any-file: 'pyproject.toml'
  - any-glob-to-any-file: 'poetry.lock'
  - any-glob-to-any-file: 'requirements*.txt' # Include requirements files if any

# Label: 'bug'
# Apply to PRs where the source branch name suggests a bug fix.
bug:
- head-branch-regex: '(fix|bugfix|issue)\/.*' # Matches branches like fix/..., bugfix/..., issue/...

# Label: 'enhancement'
# Apply to PRs where the source branch name suggests a new feature or enhancement.
enhancement:
- head-branch-regex: '(feature|feat|enhance)\/.*' # Matches branches like feature/..., feat/..., enhance/...

refactor:
- head-branch-regex: '(refactor|chore)\/.*'

# Label: 'breaking'
# Apply to PRs that explicitly mention a breaking change in the description.
breaking:
- body-regex: 'BREAKING CHANGE:' # Case-sensitive match in the PR body
