name: Build Linux

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      SIMKL_CLIENT_ID:
        required: true
      SIMKL_CLIENT_SECRET:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Set version in pyproject.toml
        run: poetry version ${{ inputs.version }}

      - name: Inject Simkl Credentials into Code
        env:
          SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
          SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}
        run: |
          # Check if secrets are available
          if [ -z "$SIMKL_CLIENT_ID" ]; then
            echo "::error::SIMKL_CLIENT_ID secret is not set."
            exit 1
          fi
          if [ -z "$SIMKL_CLIENT_SECRET" ]; then
            echo "::error::SIMKL_CLIENT_SECRET secret is not set."
            exit 1
          fi

          # Inject credentials
          sed -i "s|SIMKL_CLIENT_ID_PLACEHOLDER|${SIMKL_CLIENT_ID}|g" simkl_mps/credentials.py
          sed -i "s|SIMKL_CLIENT_SECRET_PLACEHOLDER|${SIMKL_CLIENT_SECRET}|g" simkl_mps/credentials.py

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libgtk-3-dev libnotify-dev

      - name: Build with PyInstaller
        run: |
          pip install pyinstaller
          python -m PyInstaller --clean simkl-mps.spec
          
          # Make sure the updater script is executable
          chmod +x simkl_mps/utils/updater.sh
          
          # Copy and set permissions for updater script in distribution directories
          mkdir -p dist/simkl-mps/utils/
          mkdir -p dist/simkl-mps-tray/utils/
          cp simkl_mps/utils/updater.sh dist/simkl-mps/utils/
          cp simkl_mps/utils/updater.sh dist/simkl-mps-tray/utils/
          chmod +x dist/simkl-mps/utils/updater.sh
          chmod +x dist/simkl-mps-tray/utils/updater.sh
          
          # Create systemd user timer for weekly updates
          mkdir -p dist/simkl-mps/utils/systemd
          cat > dist/simkl-mps/utils/systemd/simkl-mps-updater.service << EOF
          [Unit]
          Description=SIMKL Media Player Scrobbler Update Check
          After=network-online.target
          Wants=network-online.target
          
          [Service]
          Type=oneshot
          ExecStart=/bin/bash /usr/share/simkl-mps/utils/updater.sh --silent
          
          [Install]
          WantedBy=default.target
          EOF
          
          cat > dist/simkl-mps/utils/systemd/simkl-mps-updater.timer << EOF
          [Unit]
          Description=Weekly update check for SIMKL Media Player Scrobbler
          
          [Timer]
          OnCalendar=Mon *-*-* 12:00:00
          Persistent=true
          
          [Install]
          WantedBy=timers.target
          EOF
          
          # Create installation script for Linux
          cat > dist/simkl-mps/utils/setup-auto-update.sh << EOF
          #!/bin/bash
          
          # Create systemd user directory if it doesn't exist
          mkdir -p ~/.config/systemd/user/
          
          # Copy service and timer files
          cp /usr/share/simkl-mps/utils/systemd/simkl-mps-updater.service ~/.config/systemd/user/
          cp /usr/share/simkl-mps/utils/systemd/simkl-mps-updater.timer ~/.config/systemd/user/
          
          # Enable and start the timer
          systemctl --user daemon-reload
          systemctl --user enable simkl-mps-updater.timer
          systemctl --user start simkl-mps-updater.timer
          
          # Set first run flag
          mkdir -p ~/.config/simkl-mps/
          touch ~/.config/simkl-mps/first_run
          
          echo "Auto-updates have been configured to run weekly."
          EOF
          chmod +x dist/simkl-mps/utils/setup-auto-update.sh
          
          # Copy these files to the tray app directory too
          mkdir -p dist/simkl-mps-tray/utils/systemd
          cp dist/simkl-mps/utils/systemd/simkl-mps-updater.service dist/simkl-mps-tray/utils/systemd/
          cp dist/simkl-mps/utils/systemd/simkl-mps-updater.timer dist/simkl-mps-tray/utils/systemd/
          cp dist/simkl-mps/utils/setup-auto-update.sh dist/simkl-mps-tray/utils/
          
          # Create the tarball including the updater script
          cd dist
          tar -czvf MPSS_Linux.tar.gz simkl-mps simkl-mps-tray
          cd ..

      - name: Test PyInstaller build
        run: |
          python test_build.py linux

      - name: Package AppImage
        run: |
          VERSION="${{ inputs.version }}"
          mkdir -p dist/AppDir
          cp -r dist/simkl-mps/* dist/AppDir/
          pip install appimagetool
          # Create basic desktop file
          mkdir -p dist/AppDir/usr/share/applications
          cat > dist/AppDir/usr/share/applications/simkl-mps.desktop << EOF
          [Desktop Entry]
          Name=MPSS
          Exec=simkl-mps
          Icon=simkl-mps
          Type=Application
          Categories=Utility;
          EOF
          # Copy icon
          mkdir -p dist/AppDir/usr/share/icons
          cp simkl_mps/assets/simkl-mps.png dist/AppDir/usr/share/icons/
          # Create AppImage
          appimagetool dist/AppDir dist/MPSS_${VERSION}.AppImage

      - name: Package Debian (.deb)
        run: |
          VERSION="${{ inputs.version }}"
          # Create Debian package directory structure
          mkdir -p dist/deb/MPSS_${VERSION}/usr/bin
          mkdir -p dist/deb/MPSS_${VERSION}/usr/share/applications
          mkdir -p dist/deb/MPSS_${VERSION}/usr/share/pixmaps
          mkdir -p dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/systemd
          mkdir -p dist/deb/MPSS_${VERSION}/etc/xdg/autostart
          mkdir -p dist/deb/MPSS_${VERSION}/DEBIAN
          
          # Copy application files
          cp -r dist/simkl-mps/* dist/deb/MPSS_${VERSION}/usr/bin/
          
          # Copy systemd files for auto-updates
          cp dist/simkl-mps/utils/systemd/simkl-mps-updater.service dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/systemd/
          cp dist/simkl-mps/utils/systemd/simkl-mps-updater.timer dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/systemd/
          cp dist/simkl-mps/utils/setup-auto-update.sh dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/
          cp dist/simkl-mps/utils/updater.sh dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/
          chmod +x dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/setup-auto-update.sh
          chmod +x dist/deb/MPSS_${VERSION}/usr/share/simkl-mps/utils/updater.sh
          
          # Create symlink for main executable
          chmod +x dist/deb/MPSS_${VERSION}/usr/bin/simkl-mps
          
          # Copy desktop file
          cat > dist/deb/MPSS_${VERSION}/usr/share/applications/simkl-mps.desktop << EOF
          [Desktop Entry]
          Name=Media Player Scrobbler for SIMKL
          Exec=/usr/bin/simkl-mps start
          Icon=simkl-mps
          Type=Application
          Categories=Utility;
          Comment=Automatically scrobble movies and TV shows to SIMKL
          EOF
          
          # Create autostart desktop file
          cat > dist/deb/MPSS_${VERSION}/etc/xdg/autostart/simkl-mps.desktop << EOF
          [Desktop Entry]
          Name=Media Player Scrobbler for SIMKL
          Exec=/usr/bin/simkl-mps start
          Icon=simkl-mps
          Type=Application
          X-GNOME-Autostart-enabled=true
          NoDisplay=false
          Comment=Automatically scrobble movies and TV shows to SIMKL
          EOF
          
          # Copy icon
          cp simkl_mps/assets/simkl-mps.png dist/deb/MPSS_${VERSION}/usr/share/pixmaps/simkl-mps.png
          
          # Create control file
          cat > dist/deb/MPSS_${VERSION}/DEBIAN/control << EOF
          Package: simkl-mps
          Version: ${VERSION}
          Section: utils
          Priority: optional
          Architecture: amd64
          Depends: python3 (>= 3.9), libgtk-3-0, libnotify4
          Maintainer: kavinthangavel <kavinthangavel.dev@gmail.com>
          Description: Media Player Scrobbler for SIMKL
           Automatically scrobble your media activity to SIMKL from various media players.
           Supports VLC, MPV, MPC-HC, and PotPlayer.
          EOF
          
          # Create postinst script
          cat > dist/deb/MPSS_${VERSION}/DEBIAN/postinst << EOF
          #!/bin/sh
          set -e
          
          # Make sure the executable has proper permissions
          chmod +x /usr/bin/simkl-mps
          
          # Update desktop database
          if [ -x /usr/bin/update-desktop-database ]; then
            /usr/bin/update-desktop-database -q
          fi
          
          # Set up auto-updates for the current user
          user=\$(who | awk '{print \$1}' | head -1)
          if [ -n "\$user" ]; then
            uid=\$(id -u \$user)
            home=\$(getent passwd \$user | cut -d: -f6)
            
            # Create systemd user directory
            mkdir -p \$home/.config/systemd/user/
            cp /usr/share/simkl-mps/utils/systemd/simkl-mps-updater.service \$home/.config/systemd/user/
            cp /usr/share/simkl-mps/utils/systemd/simkl-mps-updater.timer \$home/.config/systemd/user/
            chown -R \$user:\$user \$home/.config/systemd/
            
            # Prompt user about auto-updates (uses zenity if available)
            if command -v zenity >/dev/null 2>&1; then
              DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/\$uid/bus su -c "zenity --question --title='SIMKL Media Player Scrobbler' --text='Would you like to enable weekly automatic update checks?' --ok-label='Yes' --cancel-label='No'" \$user
              if [ \$? -eq 0 ]; then
                DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/\$uid/bus su -c "systemctl --user daemon-reload && systemctl --user enable simkl-mps-updater.timer && systemctl --user start simkl-mps-updater.timer" \$user
              fi
            else
              # Without zenity, just set it up and inform in terminal
              DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/\$uid/bus su -c "systemctl --user daemon-reload && systemctl --user enable simkl-mps-updater.timer && systemctl --user start simkl-mps-updater.timer" \$user
              echo "Weekly update checks have been enabled. You can disable them with: systemctl --user disable simkl-mps-updater.timer"
            fi
            
            # Set first run flag
            mkdir -p \$home/.config/simkl-mps/
            touch \$home/.config/simkl-mps/first_run
            chown -R \$user:\$user \$home/.config/simkl-mps/
          fi
          
          # Start the application for the current user
          user=\$(who | awk '{print \$1}' | head -1)
          if [ -n "\$user" ]; then
            uid=\$(id -u \$user)
            DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/\$uid/bus su -c "/usr/bin/simkl-mps start" \$user &
          fi
          
          exit 0
          EOF
          chmod 755 dist/deb/MPSS_${VERSION}/DEBIAN/postinst
          
          # Build the deb package
          cd dist/deb
          fakeroot dpkg-deb --build MPSS_${VERSION}
          mv MPSS_${VERSION}.deb ../MPSS_${VERSION}_amd64.deb
          cd ../..

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-installers
          path: |
            dist/MPSS_*.AppImage
            dist/MPSS_*_amd64.deb
          retention-days: 3
