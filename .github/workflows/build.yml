name: Build and Publish

on:
  release:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for PyPI trusted publishing
      contents: write  # Required for creating releases
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry lock
          poetry install -q #--quiet (-q) : Do not output any message.

      - name: Set version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Extract version from tag (remove v prefix)
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # Use manually provided version
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          poetry version $VERSION

      # This step now injects the secrets directly into the credentials.py file
      - name: Inject Simkl Credentials into Code
        env:
          SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
          SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}
        run: |
          # Check if secrets are available
          if [ -z "$SIMKL_CLIENT_ID" ]; then
            echo "::error::SIMKL_CLIENT_ID secret is not set."
            exit 1
          fi
          if [ -z "$SIMKL_CLIENT_SECRET" ]; then
            echo "::error::SIMKL_CLIENT_SECRET secret is not set."
            exit 1
          fi

          # Inject Client ID
          echo "Injecting SIMKL_CLIENT_ID into credentials.py"
          # Use a different delimiter for sed in case the secret contains slashes
          sed -i "s|SIMKL_CLIENT_ID_PLACEHOLDER|${SIMKL_CLIENT_ID}|g" simkl_scrobbler/credentials.py

          # Inject Client Secret
          echo "Injecting SIMKL_CLIENT_SECRET into credentials.py"
          sed -i "s|SIMKL_CLIENT_SECRET_PLACEHOLDER|${SIMKL_CLIENT_SECRET}|g" simkl_scrobbler/credentials.py

          echo "âœ… Credentials successfully injected into simkl_scrobbler/credentials.py"

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: .github/changelog-config.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish
        run: |
          poetry build
          poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
          
      - name: Update release with changelog
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Changes in this release
            ${{ steps.changelog.outputs.changelog }}
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
