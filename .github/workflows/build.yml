name: Build and Publish

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for provenance and attestation

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

  build-verification:
    needs: prepare-release
    uses: ./.github/workflows/build-verification.yml
    with:
      version: ${{ needs.prepare-release.outputs.version }}
    # Permissions are inherited from the calling workflow

  publish-pypi:
    needs: prepare-release
    uses: ./.github/workflows/publish-pypi.yml
    with:
      version: ${{ needs.prepare-release.outputs.version }}
    secrets:
      SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
      SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  build-windows:
    needs: [prepare-release, build-verification]
    uses: ./.github/workflows/windows-build.yml
    with:
      version: ${{ needs.prepare-release.outputs.version }}
    secrets:
      SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
      SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}

  # build-macos:
  #   needs: prepare-release
  #   uses: ./.github/workflows/macos-build.yml
  #   with:
  #     version: ${{ needs.prepare-release.outputs.version }}
  #   secrets:
  #     SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
  #     SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}

  # build-linux:
  #   needs: prepare-release
  #   uses: ./.github/workflows/linux-build.yml
  #   with:
  #     version: ${{ needs.prepare-release.outputs.version }}
  #   secrets:
  #     SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
  #     SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}

  create-github-release:
    # needs: [prepare-release, publish-pypi, build-windows, build-macos, build-linux]
    needs: [prepare-release, publish-pypi, build-windows, build-verification]
    uses: ./.github/workflows/create-release.yml
    with:
      version: ${{ needs.prepare-release.outputs.version }}
    secrets:
      RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
