name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry lock

      - name: Set SIMKL_CLIENT_ID
        env:
          SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
        run: |
          echo "SIMKL_CLIENT_ID=$SIMKL_CLIENT_ID" >> $GITHUB_ENV
          if [ -z "$SIMKL_CLIENT_ID" ]; then
            echo "::error::SIMKL_CLIENT_ID secret is not set"
            exit 1
          fi

      - name: Inject Client ID
        run: |
          sed -i "s/SIMKL_CLIENT_ID_PLACEHOLDER/$SIMKL_CLIENT_ID/g" simkl_scrobbler/cli.py

      - name: Update version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Extract version from tag (remove v prefix)
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # Use manually provided version
            VERSION=${{ github.event.inputs.version }}
          fi
          poetry version $VERSION

      - name: Build package
        run: poetry build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write  # For PyPI trusted publishing
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
