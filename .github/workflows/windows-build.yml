name: Build Windows

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      SIMKL_CLIENT_ID:
        required: true
      SIMKL_CLIENT_SECRET:
        required: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry lock
          poetry install

      - name: Set version in pyproject.toml
        run: poetry version ${{ inputs.version }}

      - name: Download build-info artifact
        uses: actions/download-artifact@v4
        with:
          name: build-info
          path: build-info

      - name: Display build info
        shell: bash
        run: |
          cat build-info/build_info.json
          mkdir -p dist/
          cp build-info/build_info.json dist/

      - name: Inject Simkl Credentials into Code
        env:
          SIMKL_CLIENT_ID: ${{ secrets.SIMKL_CLIENT_ID }}
          SIMKL_CLIENT_SECRET: ${{ secrets.SIMKL_CLIENT_SECRET }}
        shell: bash
        run: |
          if [ -z "$SIMKL_CLIENT_ID" ]; then
            echo "::error::SIMKL_CLIENT_ID secret is not set."
            exit 1
          fi
          if [ -z "$SIMKL_CLIENT_SECRET" ]; then
            echo "::error::SIMKL_CLIENT_SECRET secret is not set."
            exit 1
          fi

          sed -i "s|SIMKL_CLIENT_ID_PLACEHOLDER|${SIMKL_CLIENT_ID}|g" simkl_mps/credentials.py
          sed -i "s|SIMKL_CLIENT_SECRET_PLACEHOLDER|${SIMKL_CLIENT_SECRET}|g" simkl_mps/credentials.py

      - name: Install Inno Setup
        run: |
          choco install innosetup -y

      - name: Build with PyInstaller
        run: |
          pip install pyinstaller
          
          python -m PyInstaller --clean simkl-mps.spec
          
          New-Item -Path "dist\simkl-mps" -ItemType Directory -Force
          
          Copy-Item -Path "build-info\build_info.json" -Destination "dist\simkl-mps\" -Force

      - name: Test PyInstaller build
        shell: bash
        run: |
          python test_build.py windows

      - name: Build Installer with Inno Setup
        run: |
          $version = "${{ inputs.version }}"
          (Get-Content setup.iss) -replace '#define MyAppVersion "[^"]*"', "#define MyAppVersion `"$version`"" | Set-Content setup_temp.iss
          
          $fileContent = Get-Content setup_temp.iss -Raw
          $filesPattern = "(\[Files\].*?)(^\[)"
          $newContent = $fileContent -replace $filesPattern, "`$1`r`nSource: `"build-info\build_info.json`"; DestDir: `"{app}`"; Flags: ignoreversion`r`n`r`n`$2" -replace '(?smi)'
          Set-Content -Path setup_temp.iss -Value $newContent
          
          & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' /Q setup_temp.iss
          
      - name: Rename and move installer
        run: |
          $version = "${{ inputs.version }}"
          mkdir -p artifacts
          Move-Item dist\installer\MPSS_Setup_$version.exe artifacts\MPSS_Setup_$version.exe

      - name: Calculate SHA256 for EXE
        id: hash_exe
        shell: pwsh
        run: |
          $filePath = "artifacts/MPSS_Setup_${{ inputs.version }}.exe"
          $hash = (Get-FileHash -Path $filePath -Algorithm SHA256).Hash
          echo "sha256_hash=$hash" >> $env:GITHUB_OUTPUT
          echo "Calculated hash: $hash for file: $filePath"

      - name: Upload SHA256 Hash Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sha256-hash # Name of the artifact
          path: | # Create the file on the fly
            ${{ runner.temp }}/sha256_hash.txt
          retention-days: 1 # Keep artifact for 1 day
        env:
          HASH_VALUE: ${{ steps.hash_exe.outputs.sha256_hash }}
        run: echo "$HASH_VALUE" > ${{ runner.temp }}/sha256_hash.txt

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: artifacts/
          retention-days: 3
