{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MPS for SIMKL","text":"Your media, automatically tracked whenever you watch it"},{"location":"#what-is-mps-for-simkl","title":"What is MPS for SIMKL?","text":"<p>MPS for SIMKL (Media Player Scrobbler for SIMKL) is an automatic scrobbler for SIMKL that tracks your media playback across various media players and updates your SIMKL account. The application runs silently in the background, requiring minimal setup and maintenance while ensuring your watch history stays up-to-date.</p>"},{"location":"#features","title":"\u2728 Features","text":"<ul> <li>Automatic Tracking: Detects when you're watching media and scrobbles it to your SIMKL account</li> <li>Smart Media Detection: Intelligently identifies movies and shows from filenames</li> <li>Multiple Media Players: Supports VLC, MPV, MPC-HC, PotPlayer, and more</li> <li>System Tray Interface: Convenient controls and status information</li> <li>Cross-Platform: Full support for Windows, macOS, and Linux</li> <li>Offline Support: Records your watched media when offline and syncs automatically when connection is restored</li> <li>Position Tracking: Monitors actual playback position for supported players</li> <li>Auto-Update System: Stay current with the latest features and improvements (Windows installer)</li> </ul>"},{"location":"#quick-start","title":"\u26a1 Quick Start","text":""},{"location":"#windows","title":"Windows:","text":"<p>Download the installer from the Releases Page</p>"},{"location":"#other-platforms-or-manual-installation","title":"Other platforms or manual installation:","text":"<pre><code># 1. Install via pip\npip install simkl-mps\n\n# 2. Start the application\nsimkl-mps start\n\n# 3. Authenticate when prompted and enjoy automatic tracking!\n</code></pre>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<p>For detailed information, check out the following sections:</p> <ul> <li>Installation: Get up and running quickly</li> <li>Usage: Learn how to use the application effectively</li> <li>Media Players: Configure supported media players</li> <li>Configuration: Advanced customization options</li> <li>Troubleshooting: Solutions for common issues</li> <li>Development: Information for contributors</li> </ul>"},{"location":"#how-it-works","title":"\ud83d\udd0d How It Works","text":"<pre><code>graph TD\n    A[Media Player] --&gt;|Active Window| B[MPS for SIMKL]\n    B --&gt;|Extract Information| C[Parse Media Title]\n    C --&gt;|Search| D[SIMKL API]\n    D --&gt;|Metadata| E[Track Progress]\n    E --&gt;|&gt;80% Complete| F[Mark as Watched]\n    F --&gt;|Update| G[SIMKL Profile]\n\n    style A fill:#d5f5e3,stroke:#333,stroke-width:2px\n    style G fill:#d5f5e3,stroke:#333,stroke-width:2px\n</code></pre> <ol> <li>Detection: The application monitors active windows to detect media players</li> <li>Identification: Media titles are extracted and matched against the SIMKL database</li> <li>Tracking: Playback position is monitored through window focus or player APIs</li> <li>Completion: When you've watched enough (default: 80%), it's marked as watched</li> <li>Synchronization: Your SIMKL profile is updated automatically</li> </ol>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>MPS for SIMKL is licensed under the GNU GPL v3 License. See the LICENSE file for details.</p> <p>Made with \u2764\ufe0f by kavinthangavel</p> <p> \u2b50 Star us on GitHub \u2022     \ud83d\udc1b Report Bug \u2022     \u2728 Request Feature </p>"},{"location":"configuration/","title":"\u2699\ufe0f Advanced Configuration","text":"<p>This document provides detailed configuration options for MPS for SIMKL to customize your experience.</p>"},{"location":"configuration/#configuration-overview","title":"\ud83d\udcc1 Configuration Overview","text":"<p>MPS for SIMKL uses a flexible configuration system with multiple layers in the following priority order:</p> <ol> <li>Command-line arguments (highest priority)</li> <li>Configuration file settings</li> <li>Environment variables </li> <li>Default settings (lowest priority)</li> </ol> <pre><code>graph TD\n    A[Configuration Sources] --&gt; B[Command-line Arguments]\n    A --&gt; C[Configuration File]\n    A --&gt; D[Environment Variables]\n    A --&gt; E[Default Settings]\n\n    B --&gt; F[Configuration Manager]\n    C --&gt; F\n    D --&gt; F\n    E --&gt; F\n\n    F --&gt; G[Application Settings]\n\n    G --&gt; H[Tracking Options]\n    G --&gt; I[Network Settings]\n    G --&gt; J[UI Preferences]\n    G --&gt; K[Logging Configuration]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style F fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"configuration/#configuration-locations","title":"\ud83d\udd27 Configuration Locations","text":""},{"location":"configuration/#main-configuration-file","title":"Main Configuration File","text":"<p>The application stores its primary configuration in <code>.simkl_mps.env</code>:</p> Platform Default Location Windows <code>%APPDATA%\\kavinthangavel\\simkl-mps\\.simkl_mps.env</code> macOS <code>~/Library/Application Support/kavinthangavel/simkl-mps/.simkl_mps.env</code> Linux <code>~/.local/share/kavinthangavel/simkl-mps/.simkl_mps.env</code>"},{"location":"configuration/#important-data-files","title":"Important Data Files","text":"File Purpose Location <code>simkl_mps.log</code> Main application log Same directory as config <code>playback_log.jsonl</code> Detailed media events Same directory as config <code>media_cache.json</code> Media metadata cache Same directory as config <code>backlog.json</code> Offline queue Same directory as config"},{"location":"configuration/#configuration-options","title":"\u2699\ufe0f Configuration Options","text":""},{"location":"configuration/#core-settings","title":"Core Settings","text":"Setting Command Line Env Variable Default Description Auth Token <code>--token TOKEN</code> <code>SIMKL_ACCESS_TOKEN</code> Auto-generated Your Simkl authentication token Client ID <code>--client-id ID</code> <code>SIMKL_CLIENT_ID</code> Built-in ID Simkl API client ID Data Directory <code>--data-dir PATH</code> <code>SIMKL_DATA_DIR</code> Platform default Custom location for data files"},{"location":"configuration/#media-tracking","title":"Media Tracking","text":"Setting Command Line Env Variable Default Description Poll Interval <code>--interval SECONDS</code> <code>SIMKL_POLL_INTERVAL</code> <code>10</code> Window check frequency in seconds Completion % <code>--threshold PERCENT</code> <code>SIMKL_COMPLETION_THRESHOLD</code> <code>80</code> Percentage to mark as watched Offline Mode <code>--offline</code> <code>SIMKL_OFFLINE_MODE</code> <code>false</code> Force offline operation Auto Process <code>--auto-process</code> <code>SIMKL_AUTO_PROCESS_BACKLOG</code> <code>true</code> Process backlog after reconnecting"},{"location":"configuration/#notifications","title":"Notifications","text":"Setting Command Line Env Variable Default Description Disable Notifications <code>--no-notify</code> <code>SIMKL_NO_NOTIFICATIONS</code> <code>false</code> Turn off desktop notifications Notification Level <code>--notify-level LEVEL</code> <code>SIMKL_NOTIFY_LEVEL</code> <code>normal</code> Set verbosity (<code>minimal</code>, <code>normal</code>, <code>verbose</code>)"},{"location":"configuration/#logging","title":"Logging","text":"Setting Command Line Env Variable Default Description Log Level <code>--log-level LEVEL</code> <code>SIMKL_LOG_LEVEL</code> <code>INFO</code> Set verbosity (<code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>) Log File <code>--log-file PATH</code> <code>SIMKL_LOG_FILE</code> Auto-generated Custom log file location"},{"location":"configuration/#example-configuration-file","title":"\ud83d\udcdd Example Configuration File","text":"<p>Here's a sample <code>.simkl_mps.env</code> file with common customizations:</p> <pre><code># Authentication (do not edit manually unless you know what you're doing)\nSIMKL_ACCESS_TOKEN=your_access_token_here\n\n# Tracking settings\nSIMKL_POLL_INTERVAL=5\nSIMKL_COMPLETION_THRESHOLD=85\n\n# Logging\nSIMKL_LOG_LEVEL=INFO\n\n# Notification settings\nSIMKL_NO_NOTIFICATIONS=false\nSIMKL_NOTIFY_LEVEL=normal\n</code></pre>"},{"location":"configuration/#advanced-customization","title":"\ud83d\udd0d Advanced Customization","text":""},{"location":"configuration/#media-player-settings","title":"Media Player Settings","text":"<p>Fine-tune how MPS for SIMKL interacts with specific media players:</p> <pre><code># VLC specific settings\nSIMKL_VLC_PORT=8080\nSIMKL_VLC_PASSWORD=simkl\n\n# MPV specific settings\nSIMKL_MPV_SOCKET_PATH=/custom/path/to/mpvsocket\n\n# MPC-HC specific settings\nSIMKL_MPC_PORT=13579\n</code></pre>"},{"location":"configuration/#title-detection","title":"Title Detection","text":"<p>Customize how media titles are extracted from filenames:</p> <pre><code># Custom regex pattern for title extraction\nSIMKL_TITLE_REGEX=(?i)(.+?)(?:\\W\\d{4}\\W|\\W\\(\\d{4}\\)|\\W\\d{4}$|$)\n\n# Minimum match confidence threshold (0.0-1.0)\nSIMKL_MATCH_CONFIDENCE=0.7\n</code></pre>"},{"location":"configuration/#network-configuration","title":"Network Configuration","text":"<p>If you need to use a proxy for connecting to the SIMKL API:</p> <pre><code># HTTP/HTTPS proxy settings\nSIMKL_HTTP_PROXY=http://your-proxy-server:port\nSIMKL_HTTPS_PROXY=https://your-proxy-server:port\n\n# Connection timeout in seconds\nSIMKL_CONNECTION_TIMEOUT=10\n</code></pre>"},{"location":"configuration/#configuration-methods","title":"\ud83d\udd04 Configuration Methods","text":""},{"location":"configuration/#command-line","title":"Command Line","text":"<p>Apply settings for a single session:</p> <pre><code>simkl-mps start --interval 5 --threshold 85 --log-level DEBUG\n</code></pre>"},{"location":"configuration/#configuration-file","title":"Configuration File","text":"<p>For persistent settings, edit <code>.simkl_mps.env</code> in your application data directory.</p>"},{"location":"configuration/#environment-variables","title":"Environment Variables","text":"<p>Set environment variables before running the application:</p> <pre><code># Linux/macOS\nexport SIMKL_POLL_INTERVAL=5\nexport SIMKL_LOG_LEVEL=DEBUG\nsimkl-mps start\n\n# Windows (CMD)\nset SIMKL_POLL_INTERVAL=5\nset SIMKL_LOG_LEVEL=DEBUG\nsimkl-mps start\n\n# Windows (PowerShell)\n$env:SIMKL_POLL_INTERVAL=5\n$env:SIMKL_LOG_LEVEL=DEBUG\nsimkl-mps start\n</code></pre>"},{"location":"configuration/#optimization-tips","title":"\ud83d\udee0\ufe0f Optimization Tips","text":""},{"location":"configuration/#debugging-issues","title":"Debugging Issues","text":"<p>For troubleshooting:</p> <pre><code># Enable verbose logging\nsimkl-mps start --log-level DEBUG\n\n# Set custom log file location\nsimkl-mps start --log-file ~/simkl-debug.log\n</code></pre>"},{"location":"configuration/#improving-media-detection","title":"Improving Media Detection","text":"<p>For better recognition:</p> <ol> <li>Configure advanced tracking for your media players (see Media Players)</li> <li>Use descriptive filenames: <code>Movie Title (2023).mp4</code></li> <li>Lower the poll interval: <code>--interval 5</code></li> </ol>"},{"location":"configuration/#performance-optimization","title":"Performance Optimization","text":"<p>For reduced resource usage:</p> <ol> <li>Increase poll interval: <code>--interval 20</code></li> <li>Enable minimal cache: <code>--minimal-cache</code></li> <li>Clean old data regularly: <code>simkl-mps clean</code></li> </ol>"},{"location":"configuration/#resetting-configuration","title":"\ud83d\udd04 Resetting Configuration","text":"<p>If you need to start fresh:</p> <pre><code># Complete reset\nsimkl-mps reset\n\n# Manual deletion (alternative method)\n# Windows:\n# Delete %APPDATA%\\kavinthangavel\\simkl-mps\\\n# macOS/Linux:\n# Delete ~/.local/share/kavinthangavel/simkl-mps/\n</code></pre> <p>After resetting, run <code>simkl-mps init</code> to reconfigure.</p>"},{"location":"development/","title":"\ud83d\udcbb Development Guide","text":"<p>This document provides information for developers who want to contribute to Media Player Scrobbler for SIMKL.</p>"},{"location":"development/#project-structure","title":"\ud83d\udcc2 Project Structure","text":"<pre><code>simkl-movie-tracker/\n\u251c\u2500\u2500 docs/                    # Documentation\n\u251c\u2500\u2500 simkl_mps/         # Main package\n\u2502   \u251c\u2500\u2500 __init__.py          # Package initialization\n\u2502   \u251c\u2500\u2500 backlog_cleaner.py   # Handles offline queue\n\u2502   \u251c\u2500\u2500 cli.py               # Command-line interface\n\u2502   \u251c\u2500\u2500 main.py              # Application entry point\n\u2502   \u251c\u2500\u2500 media_cache.py       # Movie info caching\n\u2502   \u251c\u2500\u2500 media_tracker.py     # Main tracking coordination\n\u2502   \u251c\u2500\u2500 monitor.py           # Window monitoring\n\u2502   \u251c\u2500\u2500 movie_scrobbler.py   # Movie tracking and Simkl integration\n\u2502   \u251c\u2500\u2500 service_manager.py   # System service management\n\u2502   \u251c\u2500\u2500 service_runner.py    # Background service implementation\n\u2502   \u251c\u2500\u2500 simkl_api.py         # Simkl API interactions\n\u2502   \u251c\u2500\u2500 tray_app.py          # System tray application\n\u2502   \u251c\u2500\u2500 window_detection.py  # Cross-platform window detection\n\u2502   \u251c\u2500\u2500 players/             # Media player integrations\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 mpc.py           # MPC-HC/BE integration\n\u2502   \u2502   \u251c\u2500\u2500 mpv.py           # MPV integration\n\u2502   \u2502   \u251c\u2500\u2500 potplayer.py     # PotPlayer integration\n\u2502   \u2502   \u2514\u2500\u2500 vlc.py           # VLC integration\n\u2502   \u2514\u2500\u2500 utils/               # Utility functions and constants\n\u251c\u2500\u2500 tests/                   # Test suite\n\u251c\u2500\u2500 .gitignore               # Git ignore patterns\n\u251c\u2500\u2500 pyproject.toml           # Project metadata and dependencies\n\u251c\u2500\u2500 README.md                # Project overview\n\u2514\u2500\u2500 LICENSE                  # License information\n</code></pre>"},{"location":"development/#development-setup","title":"\ud83d\ude80 Development Setup","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/kavinthangavel/simkl-movie-tracker.git\ncd simkl-movie-tracker\n</code></pre></p> </li> <li> <p>Set up the development environment:    <pre><code># Using Poetry (recommended)\npoetry install --with dev\n\n# Or using pip\npip install -e \".[dev]\"\n</code></pre></p> </li> <li> <p>Set up pre-commit hooks (optional):    <pre><code>pre-commit install\n</code></pre></p> </li> </ol>"},{"location":"development/#running-tests","title":"\ud83e\uddea Running Tests","text":"<pre><code># Run tests with pytest\npoetry run pytest\n\n# Run tests with coverage\npoetry run pytest --cov=simkl_mps\n\n# Run specific test file\npoetry run pytest tests/test_specific_file.py\n</code></pre>"},{"location":"development/#code-style","title":"\ud83d\udcdd Code Style","text":"<p>This project follows PEP 8 style guidelines. Use flake8 to check your code:</p> <pre><code>poetry run flake8 simkl_mps\n</code></pre>"},{"location":"development/#adding-a-new-media-player","title":"\u2795 Adding a New Media Player","text":"<p>To add support for a new media player:</p> <ol> <li>Create a new file in the <code>players/</code> directory (e.g., <code>simkl_mps/players/new_player.py</code>)</li> <li>Implement a class that follows the player integration interface:    <pre><code>class NewPlayerIntegration:\n    def __init__(self):\n        # Initialize player connection\n        pass\n\n    def get_position_duration(self, process_name=None):\n        # Return (position_seconds, duration_seconds) tuple or (None, None)\n        pass\n</code></pre></li> <li>Add the player to <code>players/__init__.py</code></li> <li>Update window detection to recognize the player in <code>window_detection.py</code></li> </ol>"},{"location":"development/#building-and-publishing","title":"\ud83d\udce6 Building and Publishing","text":"<pre><code># Build distribution packages\npoetry build\n\n# Publish to PyPI (requires credentials)\npoetry publish\n</code></pre>"},{"location":"development/#pull-request-process","title":"\ud83d\udd04 Pull Request Process","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch: <code>git checkout -b feature/amazing-feature</code></li> <li>Make your changes and commit them: <code>git commit -m 'Add amazing feature'</code></li> <li>Push to the branch: <code>git push origin feature/amazing-feature</code></li> <li>Open a Pull Request against the main repository</li> </ol>"},{"location":"development/#api-access","title":"\ud83d\udd11 API Access","text":"<p>For development, you can use the default client ID or register your own:</p> <ol> <li>Go to https://simkl.com/settings/developer/</li> <li>Create a new application</li> <li>Set the redirect URL to <code>urn:ietf:wg:oauth:2.0:oob</code></li> <li>Use the client ID in your development environment:    <pre><code>SIMKL_CLIENT_ID=your_client_id\n</code></pre></li> </ol>"},{"location":"development/#debugging-tips","title":"\ud83d\udd0d Debugging Tips","text":"<ul> <li>Use the <code>--debug</code> flag to enable detailed logging: <code>simkl-mps start --debug</code></li> <li>Check logs in the application data directory</li> <li>Use Python's debugger (pdb) or an IDE like PyCharm or VS Code for step-by-step debugging</li> <li>Test player integration separately using the player-specific test scripts</li> </ul>"},{"location":"development/#architecture-overview","title":"\ud83c\udfd7\ufe0f Architecture Overview","text":"<p>MPS for SIMKL uses a modular architecture that clearly separates responsibilities between components:</p> <pre><code>graph TD\n    A[Window Detection Module] --&gt;|Active Windows| B[Media Monitor]\n    B --&gt;|Window Info| C[Movie Scrobbler]\n    C --&gt;|Movie Title| D[Title Parser]\n    D --&gt;|Parsed Info| E[SIMKL API Client]\n    E --&gt;|Movie ID &amp; Metadata| F[Progress Tracker]\n    F --&gt;|Position Updates| G{Completion Check}\n    G --&gt;|&gt;80% Complete| H[Mark as Watched]\n    G --&gt;|&lt;80% Complete| F\n\n    I[Player Integrations] --&gt;|Position &amp; Duration| F\n    J[Backlog Cleaner] &lt;--&gt;|Offline Queue| C\n    K[Media Cache] &lt;--&gt;|Movie Info| C\n    L[Tray Application] &lt;--&gt;|Status &amp; Controls| B\n\n    I -.-&gt;|Connectivity| M{Internet Available?}\n    M --&gt;|Yes| E\n    M --&gt;|No| J\n\n    style A fill:#d5f5e3,stroke:#333,stroke-width:2px\n    style E fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style H fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style I fill:#d5eef7,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"development/#component-roles","title":"Component Roles","text":"Component File Description Window Detection <code>window_detection.py</code> OS-specific code to identify and monitor media player windows Media Monitor <code>monitor.py</code> Coordinates detection and status tracking Movie Scrobbler <code>movie_scrobbler.py</code> Core business logic for tracking and scrobbling Player Integrations <code>players/*.py</code> Individual media player APIs for precise position tracking SIMKL API Client <code>simkl_api.py</code> Authentication and communication with SIMKL Backlog Cleaner <code>backlog_cleaner.py</code> Manages the offline queue system Media Cache <code>media_cache.py</code> Local storage of movie metadata Tray Application <code>tray_app.py</code> User interface via system tray"},{"location":"development/#data-flow","title":"\ud83d\udcca Data Flow","text":"<p>The following diagram illustrates how data flows through the system:</p> <pre><code>sequenceDiagram\n    participant MP as Media Player\n    participant WD as Window Detection\n    participant SC as Movie Scrobbler\n    participant PI as Player Integration\n    participant API as SIMKL API\n    participant UI as Tray UI\n\n    MP-&gt;&gt;WD: Active Window (title)\n    WD-&gt;&gt;SC: Window Info\n    SC-&gt;&gt;SC: Parse Movie Title\n\n    SC-&gt;&gt;API: Search Movie\n    API-&gt;&gt;SC: Movie Metadata\n\n    loop Every Poll Interval\n        SC-&gt;&gt;PI: Request Position\n        PI-&gt;&gt;MP: Connect to Player API\n        MP-&gt;&gt;PI: Position &amp; Duration\n        PI-&gt;&gt;SC: Position Data\n        SC-&gt;&gt;SC: Update Progress\n    end\n\n    alt Progress &gt;= Threshold\n        SC-&gt;&gt;API: Mark as Watched\n        API-&gt;&gt;SC: Success/Failure\n        SC-&gt;&gt;UI: Show Notification\n    else No Internet\n        SC-&gt;&gt;SC: Add to Backlog\n    end\n</code></pre>"},{"location":"development/#class-relationships","title":"\ud83e\udde9 Class Relationships","text":"<p>This diagram shows the relationships between the major classes:</p> <pre><code>classDiagram\n    class SimklScrobbler {\n        +initialize()\n        +start()\n        +stop()\n        +pause()\n        +resume()\n    }\n\n    class MediaTracker {\n        -monitor: Monitor\n        +start()\n        +stop()\n        +set_credentials()\n    }\n\n    class Monitor {\n        -scrobbler: MovieScrobbler\n        -running: bool\n        +start()\n        +stop()\n        +set_credentials()\n    }\n\n    class MovieScrobbler {\n        -currently_tracking: str\n        -track_start_time: datetime\n        -state: int\n        +set_credentials()\n        +process_window()\n        +process_backlog()\n    }\n\n    class PlayerIntegration {\n        +get_position_duration()\n    }\n\n    class SimklAPI {\n        +authenticate()\n        +search_movie()\n        +mark_as_watched()\n    }\n\n    class TrayApp {\n        -scrobbler: SimklScrobbler\n        -tray_icon\n        +run()\n        +start_monitoring()\n        +pause_monitoring()\n        +process_backlog()\n    }\n\n    SimklScrobbler *-- MediaTracker\n    MediaTracker *-- Monitor\n    Monitor *-- MovieScrobbler\n    MovieScrobbler -- PlayerIntegration\n    MovieScrobbler -- SimklAPI\n    TrayApp -- SimklScrobbler\n</code></pre>"},{"location":"development/#execution-flow","title":"\ud83d\ude80 Execution Flow","text":"<p>When the application starts, this is the sequence of operations:</p> <pre><code>graph TD\n    A[User Starts Application] --&gt; B{Start Method}\n    B --&gt;|CLI 'start'| C[Background Mode]\n    B --&gt;|CLI 'tray'| D[Tray Mode]\n\n    C --&gt; E[Create SimklScrobbler]\n    D --&gt; F[Create TrayApp]\n\n    E --&gt; G[Initialize]\n    F --&gt; H[Create SimklScrobbler]\n    H --&gt; G\n\n    G --&gt; I{First Run?}\n    I --&gt;|Yes| J[Auth Flow]\n    I --&gt;|No| K[Load Credentials]\n\n    J --&gt; L[Start Monitoring]\n    K --&gt; L\n\n    L --&gt; M[Monitor Loop]\n    M --&gt; N[Detect Windows]\n    N --&gt; O[Process Windows]\n    O --&gt; P[Update Progress]\n    P --&gt; M\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style J fill:#fbbc05,stroke:#333,stroke-width:2px\n    style L fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"development/#platform-abstraction","title":"\u2699\ufe0f Platform Abstraction","text":"<p>The application uses abstraction layers to provide cross-platform support:</p> <pre><code>graph TB\n    A[Platform-Specific Modules] --&gt; B{Operating System}\n\n    B --&gt;|Windows| C[Windows Implementation]\n    B --&gt;|macOS| D[macOS Implementation]\n    B --&gt;|Linux| E[Linux Implementation]\n\n    C --&gt; F[Common Interface]\n    D --&gt; F\n    E --&gt; F\n\n    F --&gt; G[Platform-Independent Logic]\n\n    subgraph \"Platform-Specific Code\"\n    C\n    D\n    E\n    end\n\n    subgraph \"Cross-Platform Code\"\n    F\n    G\n    end\n\n    style A fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style G fill:#d5eef7,stroke:#333,stroke-width:2px\n</code></pre> <p>Key abstraction points: - Window detection - System tray integration - File system access - Process management - Notifications</p>"},{"location":"installation/","title":"\ud83d\udce5 Installation Guide","text":"<p>This guide covers detailed installation instructions for Media Player Scrobbler for SIMKL across different platforms.</p>"},{"location":"installation/#quick-start-summary","title":"\ud83d\udccb Quick Start Summary","text":"Platform Recommended Installation Method Windows Installer or pip macOS pip with macOS extras Linux pip with Linux extras"},{"location":"installation/#installation-methods","title":"\ud83d\ude80 Installation Methods","text":""},{"location":"installation/#windows-installer","title":"Windows Installer","text":"<p>The simplest way to get started on Windows:</p> <ol> <li>Download and run the latest installer</li> <li>Follow the installation wizard</li> <li>Launch the application from the Start menu</li> <li>Follow the authentication prompt to connect to your SIMKL account</li> <li>The application will run in your system tray</li> </ol>"},{"location":"installation/#windows-installer-guide","title":"\ud83e\ude9f Windows Installer Guide","text":"<p>MPS for SIMKL provides a dedicated Windows installer that simplifies installation and configuration.</p>"},{"location":"installation/#installation-process","title":"Installation Process","text":"<pre><code>flowchart TD\n    A[Download Installer] --&gt; B[Run Setup]\n    B --&gt; C[Accept License]\n    C --&gt; D[Choose Install Location]\n    D --&gt; E[Select Components]\n    E --&gt; F[Installation]\n    F --&gt; G[Launch Application]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style F fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n    style G fill:#fbbc05,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"installation/#installer-options","title":"Installer Options","text":"<p>The Windows installer offers several configuration options during setup:</p>"},{"location":"installation/#shortcut-options","title":"Shortcut Options","text":"<ul> <li>Create desktop shortcut - Adds a shortcut icon to your desktop</li> <li>Start automatically when Windows starts - Runs the application on system startup</li> <li>Schedule weekly update checks - Enables automatic update checking</li> </ul> <pre><code>flowchart LR\n    A[Options] --&gt; B[Desktop Shortcut]\n    A --&gt; C[Auto-start with Windows]\n    A --&gt; D[Auto-update Checks]\n\n    B --&gt; B1[Easy access from desktop]\n    C --&gt; C1[No need to manually start]\n    D --&gt; D1[Stay updated automatically]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"installation/#installation-locations","title":"Installation Locations","text":"<p>The installer places files in these standard locations:</p> Item Location Purpose Program Files <code>C:\\Program Files\\Media Player Scrobbler for SIMKL</code> Application executables and assets User Data <code>%APPDATA%\\kavinthangavel\\simkl-mps</code> Configuration, logs, and cache Start Menu Start Menu \u2192 MPS for SIMKL Application shortcuts Registry <code>HKCU\\Software\\kavinthangavel\\Media Player Scrobbler for SIMKL</code> Settings and metadata"},{"location":"installation/#auto-update-system","title":"Auto-Update System","text":"<p>The Windows installer includes an automatic update system that:</p> <ol> <li>Checks for updates weekly (when selected during installation)</li> <li>Notifies you when updates are available</li> <li>Allows one-click updates through the tray menu</li> </ol> <pre><code>flowchart TD\n    A[Auto-Update System] --&gt; B{Check for Updates}\n    B --&gt;|New Version Available| C[Notification]\n    B --&gt;|No Updates| D[Continue Running]\n    C --&gt; E[Update via Tray Menu]\n    E --&gt; F[Install New Version]\n    F --&gt; G[Restart Application]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style F fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"installation/#post-installation","title":"Post-Installation","text":"<p>After installation completes:</p> <ol> <li>MPS for SIMKL starts automatically (if selected)</li> <li>The system tray icon appears</li> <li>Authentication with SIMKL is requested (first run only)</li> <li>The application begins monitoring media players</li> </ol>"},{"location":"installation/#uninstallation","title":"Uninstallation","text":"<p>To uninstall MPS for SIMKL:</p> <ol> <li>Open Settings \u2192 Apps \u2192 Apps &amp; features</li> <li>Find \"Media Player Scrobbler for SIMKL\" in the list</li> <li>Click Uninstall</li> <li>Choose whether to remove user data and settings</li> </ol> <pre><code>flowchart TD\n    A[Uninstall Process] --&gt; B[Apps &amp; Features]\n    B --&gt; C[Select MPS for SIMKL]\n    C --&gt; D[Click Uninstall]\n    D --&gt; E{Remove User Data?}\n    E --&gt;|Yes| F[Complete Removal]\n    E --&gt;|No| G[Keep User Data]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style F fill:#ea4335,stroke:#333,stroke-width:2px,color:#fff\n    style G fill:#fbbc05,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"installation/#silent-installation","title":"Silent Installation","text":"<p>For advanced users and IT administrators, the installer supports silent installation:</p> <pre><code>MPSS_Setup_2.0.0.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /TASKS=\"desktopicon,startupicon,scheduledupdate\"\n</code></pre> <p>Options: - <code>/VERYSILENT</code> - Install without UI - <code>/SUPPRESSMSGBOXES</code> - No message boxes - <code>/NORESTART</code> - Don't restart after installation - <code>/TASKS</code> - Select which components to install:   - <code>desktopicon</code> - Create desktop shortcut   - <code>startupicon</code> - Auto-start with Windows   - <code>scheduledupdate</code> - Enable update checks</p>"},{"location":"installation/#pip-installation","title":"Pip Installation","text":"<p>For cross-platform installation with Python:</p> <pre><code># Install using pip\npip install simkl-mps\n\n# Initialize with your Simkl account\nsimkl-mps init\n\n# Start the application\nsimkl-mps start\n</code></pre>"},{"location":"installation/#prerequisites","title":"\u2705 Prerequisites","text":"<ul> <li>Python 3.9 or higher</li> <li>pip (Python package manager)</li> </ul>"},{"location":"installation/#platform-specific-requirements","title":"Platform-Specific Requirements","text":"Windows  Windows has full support out of the box with no additional prerequisites.  macOS  For full functionality on macOS: <pre><code># Install with macOS extras\npip install \"simkl-mps[macos]\"\n</code></pre> Linux  For window detection on Linux:  Ubuntu/Debian: <pre><code>sudo apt install python3-pip wmctrl xdotool python3-gi gir1.2-gtk-3.0 libnotify-bin\npip install \"simkl-mps[linux]\"\n</code></pre>  Fedora: <pre><code>sudo dnf install python3-pip wmctrl xdotool gtk3 libnotify\npip install \"simkl-mps[linux]\"\n</code></pre>  Arch Linux: <pre><code>sudo pacman -S python-pip wmctrl xdotool gtk3 libnotify\npip install \"simkl-mps[linux]\"\n</code></pre>"},{"location":"installation/#advanced-installation-options","title":"\ud83d\udee0\ufe0f Advanced Installation Options","text":""},{"location":"installation/#using-pipx-isolated-environment","title":"Using pipx (Isolated Environment)","text":"<p>pipx installs packages in isolated environments while making their entry points globally available:</p> <pre><code># Install pipx if not already installed\npython -m pip install --user pipx\npython -m pipx ensurepath  # Restart terminal after this\n\n# Install simkl-mps\npipx install simkl-mps\n\n# For macOS specific dependencies\npipx install simkl-mps --extras macos\n\n# For Linux specific dependencies\npipx install simkl-mps --extras linux\n</code></pre>"},{"location":"installation/#development-installation-from-source","title":"Development Installation (from source)","text":"<pre><code># Clone repository\ngit clone https://github.com/kavinthangavel/media-player-scrobbler-for-simkl.git\ncd media-player-scrobbler-for-simkl\n\n# Install with Poetry\npoetry install\n\n# Run commands\npoetry run simkl-mps init\npoetry run simkl-mps start\n</code></pre>"},{"location":"installation/#post-installation-setup","title":"\ud83d\ude80 Post-Installation Setup","text":""},{"location":"installation/#authentication","title":"Authentication","text":"<p>When you first run the application, you'll be guided through authentication with Simkl:</p> <ol> <li>The application will display a URL and device code</li> <li>Visit the URL on any device and enter the code</li> <li>Authorize the application to access your Simkl account</li> <li>The application will automatically complete the setup once authorized</li> </ol>"},{"location":"installation/#media-player-setup","title":"Media Player Setup","text":"<p>For optimal tracking accuracy, configure your media players according to the Media Players guide.</p>"},{"location":"installation/#verifying-installation","title":"\u2728 Verifying Installation","text":"<p>After installation, verify that the application is properly installed:</p> <pre><code>simkl-mps --version\n</code></pre> <p>This will display version information about the installed application.</p>"},{"location":"installation/#running-the-application","title":"\ud83d\udea6 Running the Application","text":"<p>There are multiple ways to run the application:</p> Command Description <code>simkl-mps start</code> Run in background (recommended for daily use) <code>simkl-mps tray</code> Run in foreground with system tray icon <code>simkl-mps daemon</code> Run as a daemon service (Linux/macOS only) <code>simkl-mps stop</code> Stop the running application <code>simkl-mps status</code> Check if the application is running <p>For more details, see the Usage Guide.</p>"},{"location":"media-players/","title":"\ud83c\udfac Supported Media Players","text":"<p>This document details the media players compatible with MPS for SIMKL and how to configure them for optimal tracking.</p>"},{"location":"media-players/#player-compatibility-matrix","title":"\ud83d\udccb Player Compatibility Matrix","text":"<pre><code>graph TD\n    A[Media Players] --&gt; B[Basic Support]\n    A --&gt; C[Advanced Tracking]\n\n    B --&gt;|Window Title Detection| D[Any Player with Visible Filename]\n\n    C --&gt; E[VLC]\n    C --&gt; F[MPV]\n    C --&gt; G[MPC-HC/BE]\n\n    E --&gt;|Web Interface| I[Position Tracking]\n    F --&gt;|IPC Socket| I\n    G --&gt;|Web Interface| I\n\n    I --&gt; J[Accurate Scrobbling]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style C fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n    style J fill:#fbbc05,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"media-players/#windows-support","title":"Windows Support","text":"Media Player Basic Support Advanced Position Tracking Configuration Method VLC \u2705 \u2705 Web interface (port 8080) MPC-HC/BE \u2705 \u2705 Web interface (port 13579) MPV \u2705 \u2705 IPC socket (named pipe) PotPlayer \u2705 \u2705 Web interface (port 8080) [Still in Testing] Windows Media Player \u2705 \u274c Window title only SMPlayer \u2705 \u274c Window title only KMPlayer \u2705 \u274c Window title only GOM Player \u2705 \u274c Window title only"},{"location":"media-players/#macos-support","title":"macOS Support","text":"Media Player Basic Support Advanced Position Tracking Configuration Method VLC \u2705 \u2705 Web interface (port 8080) MPV \u2705 \u2705 IPC socket (UNIX socket) QuickTime \u2705 \u274c Window title only Elmedia Player \u2705 \u274c Window title only Movist Pro \u2705 \u274c Window title only"},{"location":"media-players/#linux-support","title":"Linux Support","text":"Media Player Basic Support Advanced Position Tracking Configuration Method VLC \u2705 \u2705 Web interface (port 8080) MPV \u2705 \u2705 IPC socket (UNIX socket) SMPlayer \u2705 \u274c Window title only Totem \u2705 \u274c Window title only Kaffeine \u2705 \u274c Window title only"},{"location":"media-players/#understanding-tracking-methods","title":"\ud83c\udfaf Understanding Tracking Methods","text":""},{"location":"media-players/#basic-support-vs-advanced-tracking","title":"Basic Support vs. Advanced Tracking","text":"<pre><code>graph LR\n    A[Tracking Methods] --&gt; B[Basic Support]\n    A --&gt; C[Advanced Tracking]\n\n    B --&gt;|Window Title| D[Generic Detection]\n    D --&gt; E[Estimated Progress]\n\n    C --&gt;|Player API| F[Direct Connection]\n    F --&gt; G[Precise Position Data]\n\n    E --&gt; H[Less Accurate]\n    G --&gt; I[More Accurate]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style B fill:#fbbc05,stroke:#333,stroke-width:2px\n    style C fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"media-players/#basic-support-all-players","title":"Basic Support (All Players)","text":"<ul> <li>Works by monitoring the player's window title</li> <li>Extracts media information from the filename shown in the title</li> <li>Estimates when you've watched enough to mark as completed</li> <li>No player configuration required</li> </ul>"},{"location":"media-players/#advanced-tracking-selected-players","title":"Advanced Tracking (Selected Players)","text":"<ul> <li>Connects directly to the media player's API</li> <li>Retrieves exact playback position and total duration</li> <li>Accurately calculates completion percentage</li> <li>Requires specific player configuration (see below)</li> </ul>"},{"location":"media-players/#player-configuration-guide","title":"\u2699\ufe0f Player Configuration Guide","text":""},{"location":"media-players/#vlc-media-player","title":"VLC Media Player","text":"Enabling the VLC Web Interface  1. Open VLC and go to **Tools** &gt; **Preferences** (or **VLC** &gt; **Preferences** on macOS) 2. Click **Show settings: All** at the bottom left 3. Navigate to **Interface** &gt; **Main interfaces** 4. Check the box for **Web** 5. Go to **Interface** &gt; **Main interfaces** &gt; **Lua** 6. Set a password in **Lua HTTP Password** (recommended: `simkl`) 7. Keep the default port (8080) or change it if needed 8. Click **Save** and restart VLC  **Testing:** Open `http://localhost:8080` in your browser. You should see the VLC web interface.  **Configuration Options:** <pre><code># In .simkl_mps.env:\nSIMKL_VLC_PORT=8080\nSIMKL_VLC_PASSWORD=simkl\n</code></pre>"},{"location":"media-players/#mpv-player","title":"MPV Player","text":"Setting Up MPV IPC Socket  1. Create or locate the MPV configuration directory:    - Windows: `%APPDATA%\\mpv\\`    - macOS/Linux: `~/.config/mpv/` 2. Create or edit `mpv.conf` in this directory 3. Add the following line:    <pre><code># For Windows:\ninput-ipc-server=\\\\.\\pipe\\mpvsocket\n\n# For macOS/Linux:\ninput-ipc-server=/tmp/mpvsocket\n</code></pre> 4. Save the file and restart MPV  **IINA (macOS):** Open IINA Preferences &gt; Advanced and add the socket configuration.  **Configuration Options:** <pre><code># In .simkl_mps.env:\n# For Windows:\nSIMKL_MPV_SOCKET_PATH=\\\\.\\pipe\\mpvsocket\n\n# For macOS/Linux:\nSIMKL_MPV_SOCKET_PATH=/tmp/mpvsocket\n</code></pre>"},{"location":"media-players/#mpc-hc-mpc-be-windows-only","title":"MPC-HC / MPC-BE (Windows Only)","text":"Configuring MPC Web Interface  1. Open MPC-HC/BE and go to **View** &gt; **Options** 2. Navigate to **Player** &gt; **Web Interface** (or just **Web Interface** in MPC-BE) 3. Check **Listen on port:** (default is 13579) 4. Click **OK** and restart MPC  **Testing:** Open `http://localhost:13579` in your browser. You should see the MPC web interface.  **Configuration Options:** <pre><code># In .simkl_mps.env:\nSIMKL_MPC_PORT=13579\n</code></pre>"},{"location":"media-players/#potplayer-windows-only-testing","title":"PotPlayer (Windows Only) [Testing]","text":"Enabling PotPlayer Web Interface  1. Open PotPlayer and press **F5** to open Preferences 2. Navigate to **Others** &gt; **Web Control Interface** 3. Check **Listen to HTTP request on port:** (default is 8080) 4. Click **Apply** and **OK**, then restart PotPlayer  **Testing:** Open `http://localhost:8080` in your browser. You should see the PotPlayer web interface.  **Configuration Options:** <pre><code># In .simkl_mps.env:\nSIMKL_POTPLAYER_PORT=8080\n</code></pre>"},{"location":"media-players/#optimizing-media-detection","title":"\ud83d\udca1 Optimizing Media Detection","text":""},{"location":"media-players/#filename-best-practices","title":"Filename Best Practices","text":"<pre><code>graph LR\n    A[Optimal Filename Format] --&gt; B[Movies]\n    A --&gt; C[TV Shows]\n\n    B --&gt; D[\"MovieTitle (Year).ext\"]\n    C --&gt; E[\"ShowTitle SXXEXX.ext\"]\n\n    D --&gt; F[\"Inception (2010).mkv\"]\n    E --&gt; G[\"Breaking Bad S01E01.mp4\"]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"media-players/#movie-filename-format","title":"Movie Filename Format","text":"<ul> <li>Include the full movie title</li> <li>Add the release year in parentheses</li> <li>Example: <code>Inception (2010).mkv</code></li> </ul>"},{"location":"media-players/#tv-show-filename-format","title":"TV Show Filename Format","text":"<ul> <li>Include the full show title</li> <li>Use standard season/episode notation (S01E01)</li> <li>Example: <code>Breaking Bad S01E01.mp4</code></li> </ul>"},{"location":"media-players/#troubleshooting-player-integration","title":"\ud83d\udd27 Troubleshooting Player Integration","text":""},{"location":"media-players/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Problem Possible Causes Solutions Cannot connect to VLC Web interface not enabledWrong password Check VLC settingsVerify password in config MPV socket not found Wrong socket pathConfig not saved Verify configurationCheck file permissions MPC web interface not responding Interface not enabledPort conflict Check MPC settingsTry different port Position tracking not working Player not supportedConnection issue Use supported playerVerify settings"},{"location":"media-players/#testing-your-configuration","title":"Testing Your Configuration","text":"<p>To verify your player is properly configured:</p> <ol> <li>Start your media player with advanced tracking enabled</li> <li>Run MPS for SIMKL with debug logging:    <pre><code>simkl-mps tray --debug\n</code></pre></li> <li>Play a media file</li> <li>Check the logs for <code>Connected to [player]</code> and position data</li> </ol>"},{"location":"media-players/#alternative-approaches","title":"Alternative Approaches","text":"<p>If advanced tracking isn't working:</p> <ol> <li>Use window title detection: Works with any player showing filenames</li> <li>Try a different supported player: VLC works well on all platforms</li> <li>Name files clearly: Good filenames help with basic detection</li> </ol>"},{"location":"todo/","title":"\ud83d\udccb Todo List","text":"<p>This document tracks both completed features and planned improvements for Media Player Scrobbler for SIMKL.</p>"},{"location":"todo/#completed","title":"\u2705 Completed","text":"<ul> <li>[x] \ud83c\udf0d Cross-platform support (Windows, macOS, Linux)</li> <li>[x] \ud83c\udfae Integration with multiple media players</li> <li>[x] \ud83d\udd04 ~~Background service implementation~~</li> <li>[x] \ud83d\udcca Position tracking for media players with web interfaces</li> <li>[x] \ud83d\udda5\ufe0f System tray application</li> <li>[x] \ud83d\udd0c Offline mode with backlog handling</li> <li>[x] \ud83e\udde0 Smart movie detection using guessit library</li> <li>[x] \ud83d\udce6 Package distribution via PyPI</li> <li>[x] \ud83d\ude19 New Icon/Logo and Name</li> <li>[x] \ud83d\uddb1\ufe0f Enhance the tray application with more controls</li> </ul>"},{"location":"todo/#in-progress","title":"\ud83d\udea7 In Progress","text":"<ul> <li>[x] \ud83c\udfe6 Create installers for cross platform(Windows only Tested)</li> <li>[ ] \ud83d\udeb9 Option to User Set Completion Percentage and Edit it Later</li> <li>[ ] \ud83d\udcf1 Improve notification system</li> <li>[ ] \ud83e\ude9c Testing Cross-Platform</li> </ul>"},{"location":"todo/#planned-features","title":"\ud83d\udcdd Planned Features","text":""},{"location":"todo/#short-term","title":"Short Term","text":"<ul> <li>[ ] \ud83d\udd10 Enhanced authentication flow</li> <li>[ ] \ud83e\uddea Create comprehensive automated test suite</li> <li>[ ] \ud83d\udd0e Add option to manually correct misidentified movies</li> </ul>"},{"location":"todo/#medium-term","title":"Medium Term","text":"<ul> <li>[ ] \ud83d\udd04 Two-way sync (mark as watched on Simkl affects local status)</li> </ul>"},{"location":"todo/#long-term-ideas","title":"Long Term / Ideas","text":"<ul> <li>[ ] \ud83d\udcfa Add support for TV shows/Anime tracking</li> <li>[ ] \ud83c\udfac Integration with more streaming platforms (browser extensions)</li> <li>[ ] \ud83d\udc65 Multi-user support for shared computers</li> <li>[ ] \ud83d\udd0d Advanced search and filtering of watched content</li> </ul>"},{"location":"todo/#contribution-opportunities","title":"\ud83e\udd1d Contribution Opportunities","text":"<p>These are good starting points for new contributors:</p> <ul> <li>[ ] \ud83d\udcda Improve documentation with more examples</li> <li>[ ] \ud83c\udf10 Add translations for UI elements</li> <li>[ ] \ud83d\udc1b Fix known issues from GitHub Issues</li> <li>[ ] \u26a1 Performance optimizations</li> <li>[ ] \ud83e\uddea Create additional tests</li> </ul> <p>Note: Timeline is approximate and subject to change based on contributor availability.</p>"},{"location":"troubleshooting/","title":"\ud83d\udd27 Troubleshooting Guide","text":"<p>This document provides solutions for common issues with MPS for SIMKL and steps to diagnose and resolve problems.</p>"},{"location":"troubleshooting/#common-issues-and-solutions","title":"\ud83d\udea8 Common Issues and Solutions","text":""},{"location":"troubleshooting/#authentication-problems","title":"\ud83d\udd10 Authentication Problems","text":"Authentication fails or token errors  | Issue | Solution | |-------|----------| | \"Unable to authenticate\" | Check your internet connection and try again | | \"Invalid PIN code\" | Make sure you're entering the exact code shown | | \"Token expired\" | Run `simkl-mps init` to get a new access token | | \"Client ID not valid\" | If using a custom client ID, verify it in your Simkl developer settings |  **Quick fix command:** <pre><code>simkl-mps init --force\n</code></pre>  This resets your authentication completely and starts a fresh authentication flow.  Multiple users/devices  MPS for SIMKL currently supports one Simkl account per installation. To switch accounts:  1. Run `simkl-mps init --force` to reset authentication 2. Complete the new authentication flow with your desired account  For multiple users on the same machine, consider using separate user accounts or custom data directories: <pre><code>simkl-mps start --data-dir \"/path/to/custom/location\"\n</code></pre>"},{"location":"troubleshooting/#detection-issues","title":"\ud83d\udd0d Detection Issues","text":"Media not detected  If your media isn't being detected:  1. **Check window title:** Ensure your media player shows the filename in its window title 2. **File naming:** Use clear filenames with the movie/show title and year when possible 3. **Player support:** Verify your player is in the [supported list](media-players.md) 4. **Window detection:** Some players may hide or modify titles in fullscreen mode  **Debugging steps:** <pre><code># Run with debug logging to see what titles are being detected\nsimkl-mps tray --debug\n\n# Look for lines containing \"Window title detected\" or \"Parsing title\"\n</code></pre>  When playing media, you should see log entries showing the detected window title and parsing attempts.  Wrong movie/show detected  If the wrong title is being matched:  1. **Improve filename:** Include the full title and year in parentheses: `Movie Title (2023).mp4` 2. **Check logs:** Run with `--debug` to see what title was extracted and what Simkl matched it to 3. **Manual handling:** For files that consistently mismatch, consider renaming them  **Advanced solution:** You can modify the title parsing regex in your configuration: <pre><code># In .simkl_mps.env\nSIMKL_TITLE_REGEX=(?i)(.+?)(?:\\W\\d{4}\\W|\\W\\(\\d{4}\\)|\\W\\d{4}$|$)\n</code></pre> No detection in some media players  Some media players may not expose the necessary information:  1. **Configure advanced tracking:** Set up the player's web interface or IPC connection (see [Media Players](media-players.md)) 2. **Alternative view modes:** Some players expose title information in windowed mode but not fullscreen 3. **Window title format:** Check if your player has settings to customize the window title format  **Testing command:** <pre><code># This will show all window titles currently visible\nsimkl-mps windows\n</code></pre>"},{"location":"troubleshooting/#tracking-problems","title":"\ud83d\udcca Tracking Problems","text":"Media never marked as watched  If media isn't being marked as watched:  1. **Completion threshold:** Verify you've watched enough of the media (default: 80%) 2. **Internet connection:** Check if you're online; offline tracking stores to backlog 3. **Advanced tracking:** Configure your player for position detection (see [Media Players](media-players.md)) 4. **Process backlog:** Try `simkl-mps backlog process` to send pending updates  **Check progress tracking:** <pre><code># Run in debug mode to see progress updates\nsimkl-mps tray --debug\n\n# Look for lines containing \"Progress\" or \"position\"\n</code></pre>  You should see periodic updates showing your current position and progress percentage.  Position tracking not working  If position isn't being detected:  1. **Player configuration:** Ensure your player's web interface or IPC is properly set up 2. **Port conflicts:** Check if the default ports are being used by other applications 3. **Firewall issues:** Ensure local connections to player ports aren't being blocked 4. **Player versions:** Some newer player versions may have changed their API  **Test player connections:** <pre><code># For VLC\ncurl http://localhost:8080/requests/status.xml\n\n# For MPC-HC\ncurl http://localhost:13579/variables.html\n\n# For MPV on Windows\n# (requires special tools to test pipe connections)\n</code></pre>"},{"location":"troubleshooting/#platform-specific-issues","title":"\ud83d\udcbb Platform-Specific Issues","text":"Windows issues  | Issue | Solution | |-------|----------| | \"Command not found\" | Add Python Scripts directory to PATH or use `py -m simkl_mps` | | Application won't start | Check Windows Event Viewer for Python errors | | Tray icon missing | Verify you have system tray enabled in taskbar settings | | Missing DLLs | Install Visual C++ Redistributable packages | | Service won't install | Run Command Prompt as Administrator |  For advanced Windows troubleshooting: <pre><code># Check if the process is running\nGet-Process -Name \"MPSS*\" -ErrorAction SilentlyContinue\n\n# View log file\nGet-Content \"$env:APPDATA\\kavinthangavel\\simkl-mps\\simkl_mps.log\" -Tail 50\n</code></pre> macOS issues  | Issue | Solution | |-------|----------| | Missing permissions | Grant accessibility permissions in System Preferences &gt; Security &amp; Privacy &gt; Privacy &gt; Accessibility | | Python not found | Install Python properly via Homebrew: `brew install python` | | Notification issues | Grant notification permissions in System Preferences | | App not starting | Check console logs: `console` application, filter for Python |  For advanced macOS troubleshooting: <pre><code># Check process status\nps aux | grep -i simkl\n\n# View log file\ntail -n 50 ~/Library/Application\\ Support/kavinthangavel/simkl-mps/simkl_mps.log\n</code></pre> Linux issues  | Issue | Solution | |-------|----------| | Window detection fails | Install required packages: `sudo apt install wmctrl xdotool` (or equivalent) | | Missing dependencies | Install GTK and notification libraries: `sudo apt install python3-gi gir1.2-gtk-3.0 libnotify-bin` | | Tray icon issues | Ensure your desktop environment supports system trays/indicators | | D-Bus errors | Verify you're running in a standard desktop environment with D-Bus |  For advanced Linux troubleshooting: <pre><code># Check process status\nps aux | grep -i simkl\n\n# View log file\ntail -n 50 ~/.local/share/kavinthangavel/simkl-mps/simkl_mps.log\n\n# Check if your window manager is supported\necho $XDG_CURRENT_DESKTOP\n\n# Debug window detection\nwmctrl -l\n</code></pre>"},{"location":"troubleshooting/#advanced-diagnostics","title":"\ud83d\udd2c Advanced Diagnostics","text":"Debug logging  Enable verbose logging to diagnose issues:  <pre><code># Run with debug logging in terminal mode\nsimkl-mps tray --log-level DEBUG\n\n# Set persistent debug logging\necho \"SIMKL_LOG_LEVEL=DEBUG\" &gt;&gt; ~/.local/share/kavinthangavel/simkl-mps/.simkl_mps.env\n</code></pre>  Key logging indicators: - **INFO:** Normal operation events - **WARNING:** Minor issues that don't prevent functionality - **ERROR:** Problems that prevent specific operations - **CRITICAL:** Severe issues that prevent the application from running  Important log sections to check: 1. **Authentication issues:** Look for \"auth,\" \"token,\" or \"Simkl API\" messages 2. **Detection issues:** Look for \"window,\" \"title,\" or \"parsing\" messages 3. **Playback issues:** Look for \"position,\" \"duration,\" or \"progress\" messages 4. **Scrobbling issues:** Look for \"marked as watched\" or \"scrobble\" messages  Network diagnostics  Test connections to SIMKL API and media player interfaces:  <pre><code># Test SIMKL API connectivity\ncurl -I https://api.simkl.com/\n\n# Test VLC web interface (if configured)\ncurl -I http://localhost:8080/\n\n# Test MPC web interface (if configured)\ncurl -I http://localhost:13579/\n\n# Check for processes listening on media player ports\n# Windows (PowerShell):\nnetstat -ano | findstr \"8080 13579\"\n\n# macOS/Linux:\nnetstat -tuln | grep -E \"8080|13579\"\n</code></pre>  Network-related issues are often indicated by timeout errors or connection refused messages in the logs.  System resource usage  If you're experiencing performance issues:  <pre><code># Check CPU and memory usage\n# Windows (PowerShell):\nGet-Process -Name \"MPSS*\" | Select-Object Name, CPU, WS\n\n# macOS/Linux:\nps aux | grep -i simkl\n</code></pre>  The application should use minimal resources (typically &lt;1% CPU and &lt;50MB RAM) when idle."},{"location":"troubleshooting/#reset-and-recovery","title":"\ud83e\uddf9 Reset and Recovery","text":"Complete application reset  To reset everything and start fresh:  1. Stop all instances of the application:    <pre><code>simkl-mps stop\n</code></pre>  2. Delete the application data directory:    - Windows: `%APPDATA%\\kavinthangavel\\simkl-mps`    - macOS: `~/Library/Application Support/kavinthangavel/simkl-mps`    - Linux: `~/.local/share/kavinthangavel/simkl-mps`  3. Reinstall the application:    <pre><code>pip install --force-reinstall simkl-mps\n</code></pre>  4. Initialize again:    <pre><code>simkl-mps init\n</code></pre> Recovering from crashes  If the application is crashing or freezing:  1. Stop any running instances:    <pre><code>simkl-mps stop --force\n</code></pre>  2. Backup and examine logs:    <pre><code># Windows (PowerShell):\nCopy-Item \"$env:APPDATA\\kavinthangavel\\simkl-mps\\simkl_mps.log\" \"$env:USERPROFILE\\Desktop\\simkl_backup.log\"\n\n# macOS/Linux:\ncp ~/.local/share/kavinthangavel/simkl-mps/simkl_mps.log ~/simkl_backup.log\n</code></pre>  3. Try running in safe mode (disables advanced features):    <pre><code>simkl-mps start --safe-mode\n</code></pre>"},{"location":"troubleshooting/#getting-help","title":"\ud83c\udd98 Getting Help","text":"<p>If you've tried everything above and still have issues:</p> <ol> <li>Check the GitHub Issues to see if your problem is already known</li> <li>Collect diagnostic information:    <pre><code>simkl-mps diagnose &gt; simkl-diagnostic-report.txt\n</code></pre></li> <li>Open a new issue with:</li> <li>Your operating system and version</li> <li>MPS for SIMKL version (<code>simkl-mps --version</code>)</li> <li>Relevant log excerpts (with sensitive information redacted)</li> <li>Steps to reproduce the problem</li> <li>The diagnostic report file</li> </ol> <p>Include as much detail as possible to help the developers identify and fix the issue quickly.</p>"},{"location":"usage/","title":"\ud83c\udfae Usage Guide","text":"<p>This document explains how to effectively use MPS for SIMKL to automatically track your media watching activity.</p>"},{"location":"usage/#quick-command-reference","title":"\ud83d\udccb Quick Command Reference","text":"Command Shorthand Description <code>simkl-mps init</code> <code>simkl-mps i</code> Initial setup and authentication <code>simkl-mps start</code> <code>simkl-mps s</code> Start tracking in background mode <code>simkl-mps tray</code> <code>simkl-mps t</code> Launch with interactive tray interface <code>simkl-mps stop</code> <code>simkl-mps x</code> Stop the running application <code>simkl-mps status</code> <code>simkl-mps st</code> Check if the application is running <code>simkl-mps version</code> <code>simkl-mps -v</code> Show version information <code>simkl-mps clean</code> <code>simkl-mps c</code> Clean old backlog entries <code>simkl-mps backlog</code> <code>simkl-mps b</code> Manage offline backlog entries"},{"location":"usage/#getting-started","title":"\ud83d\ude80 Getting Started","text":"<pre><code>graph TD\n    A[Install MPS for SIMKL] --&gt; B[Run Initial Setup]\n    B --&gt;|simkl-mps init| C[Authenticate with SIMKL]\n    C --&gt; D[Choose Operation Mode]\n\n    D --&gt;|simkl-mps start| E[Background Mode]\n    D --&gt;|simkl-mps tray| F[Interactive Mode]\n    D --&gt;|simkl-mps daemon| G[Service Mode]\n\n    E --&gt; H[Play Media in Supported Player]\n    F --&gt; H\n    G --&gt; H\n\n    H --&gt; I[Automatic Tracking]\n    I --&gt; J[Progress Updates on SIMKL]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style C fill:#fbbc05,stroke:#333,stroke-width:2px\n    style H fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n    style J fill:#ea4335,stroke:#333,stroke-width:2px,color:#fff\n</code></pre>"},{"location":"usage/#operation-modes","title":"\ud83d\udd04 Operation Modes","text":""},{"location":"usage/#background-mode-recommended","title":"Background Mode (Recommended)","text":"<pre><code>simkl-mps start\n</code></pre> <p>This mode is ideal for everyday use: - Runs silently in the system tray - Continues after terminal is closed - Low resource usage - Status visible via tray icon - Auto-starts on system boot (optional)</p>"},{"location":"usage/#interactive-tray-mode","title":"Interactive Tray Mode","text":"<pre><code>simkl-mps tray\n</code></pre> <p>Best for testing and troubleshooting: - Shows real-time console output - Allows monitoring detection process - Requires terminal to remain open - Helpful for initial configuration</p>"},{"location":"usage/#service-mode-linuxmacos","title":"Service Mode (Linux/macOS)","text":"<pre><code># Install as system service\nsimkl-mps daemon install\n\n# Control the service\nsimkl-mps daemon start\nsimkl-mps daemon status\nsimkl-mps daemon stop\nsimkl-mps daemon uninstall\n</code></pre>"},{"location":"usage/#common-command-line-options","title":"\ud83d\udcbb Common Command-Line Options","text":"<pre><code># Enable detailed logging\nsimkl-mps start --debug\n\n# Change poll frequency (in seconds)\nsimkl-mps start --interval 5\n\n# Adjust completion threshold (percentage)\nsimkl-mps start --threshold 90\n\n# Disable notifications\nsimkl-mps start --no-notify\n\n# Custom configuration file\nsimkl-mps start --config /path/to/config.env\n\n# Combine multiple options\nsimkl-mps start --interval 5 --threshold 85 --debug\n</code></pre>"},{"location":"usage/#tracking-workflow","title":"\ud83d\udcca Tracking Workflow","text":"<pre><code>sequenceDiagram\n    participant User\n    participant MP as Media Player\n    participant MPS as MPS for SIMKL\n    participant SIMKL as SIMKL.com\n\n    User-&gt;&gt;MP: Open media file\n    MP-&gt;&gt;MPS: Window title detected\n    MPS-&gt;&gt;MPS: Parse media title\n    MPS-&gt;&gt;SIMKL: Search for media\n    SIMKL-&gt;&gt;MPS: Return metadata\n\n    loop While media plays\n        MPS-&gt;&gt;MP: Check playback position\n        MP-&gt;&gt;MPS: Return current position\n        MPS-&gt;&gt;MPS: Calculate progress %\n    end\n\n    MPS-&gt;&gt;MPS: Check if progress &gt;= threshold\n    MPS-&gt;&gt;SIMKL: Mark as watched\n    SIMKL-&gt;&gt;MPS: Confirmation\n    MPS-&gt;&gt;User: Show notification\n</code></pre>"},{"location":"usage/#system-tray-interface","title":"\ud83d\udd0d System Tray Interface","text":"<p>The system tray provides quick access to controls and status information:</p>"},{"location":"usage/#status-icons","title":"Status Icons","text":"Icon Status Description Running Actively monitoring media players Paused Monitoring temporarily paused Stopped Not monitoring any players Error An error has occurred"},{"location":"usage/#tray-menu-functions","title":"Tray Menu Functions","text":"<pre><code>flowchart TD\n    A[Tray Icon] --&gt;|Right-click| B[Menu]\n    B --&gt; C[Status Information]\n    B --&gt; D{Toggle Monitoring}\n    D --&gt;|If Running| E[Pause]\n    D --&gt;|If Paused/Stopped| F[Start]\n\n    B --&gt; G[Tools Submenu]\n    G --&gt; G1[Open Logs]\n    G --&gt; G2[Config Directory]\n    G --&gt; G3[Process Backlog]\n\n    B --&gt; H[SIMKL Online]\n    H --&gt; H1[SIMKL Website]\n    H --&gt; H2[Watch History]\n\n    B --&gt; I[Updates]\n    I --&gt; I1[Check for Updates]\n    I --&gt; I2[Install Update]\n\n    B --&gt; J[About/Help]\n    B --&gt; K[Exit]\n\n    style A fill:#4285f4,stroke:#333,stroke-width:2px,color:#fff\n    style F fill:#34a853,stroke:#333,stroke-width:2px,color:#fff\n    style E fill:#fbbc05,stroke:#333,stroke-width:2px\n    style K fill:#ea4335,stroke:#333,stroke-width:2px,color:#fff\n</code></pre> <p>Key tray menu options: - Start/Pause: Toggle media monitoring - Status Display: Shows current state and last tracked media - Tools: Access to logs, configuration, and backlog management - Online Services: Links to SIMKL website and history - Updates: Check for and install application updates - Exit: Completely close the application</p>"},{"location":"usage/#notifications","title":"\ud83d\udcf1 Notifications","text":"<p>The application provides desktop notifications for important events:</p> Event When Example Authentication After successful login \"Connected to SIMKL account\" Media Detection When starting to track \"Now tracking: Movie Title (2023)\" Progress Update When position changes significantly \"Movie Title: 45% complete\" Scrobbling When media is marked as watched \"Movie Title marked as watched\" Errors When problems occur \"Unable to connect to SIMKL\""},{"location":"usage/#common-workflows","title":"\ud83d\udea5 Common Workflows","text":""},{"location":"usage/#first-time-setup","title":"First-Time Setup","text":"<pre><code># Initial setup and authentication\nsimkl-mps init\n\n# Check if detection works with your media\nsimkl-mps tray\n\n# Play some media files to verify detection\n# Once confirmed working, stop tray mode (Ctrl+C)\n\n# Set up for daily use\nsimkl-mps start\n</code></pre>"},{"location":"usage/#daily-usage","title":"Daily Usage","text":"<p>Simply ensure MPS for SIMKL is running (either automatically at startup or manually started), then play media in any supported player. The application will:</p> <ol> <li>Detect when media is playing</li> <li>Identify the content</li> <li>Track your progress</li> <li>Mark as watched when you've seen enough</li> <li>Update your SIMKL profile</li> </ol>"},{"location":"usage/#offline-usage","title":"Offline Usage","text":"<p>The application works seamlessly offline:</p> <ol> <li>Media detection functions normally without internet</li> <li>Watched content is stored in the backlog</li> <li>When connection returns, backlog is processed automatically</li> <li>Manual processing: <code>simkl-mps backlog process</code></li> </ol>"},{"location":"usage/#tips-and-best-practices","title":"\ud83d\udd27 Tips and Best Practices","text":"<ol> <li>Filename Format: Use clear names with year: <code>Movie Title (2023).mp4</code></li> <li>Advanced Tracking: Configure media player interfaces for accurate position detection</li> <li>Resource Usage: For lower CPU/memory usage, increase the poll interval to 15-20 seconds</li> <li>Autostart: Set the application to start automatically with your system</li> <li>Regular Maintenance: Run <code>simkl-mps clean</code> occasionally to remove old backlog entries</li> </ol>"},{"location":"usage/#log-analysis","title":"\ud83d\udcca Log Analysis","text":"<p>For troubleshooting, check the log files:</p> <pre><code># Main application log (default location)\nWindows: %APPDATA%\\kavinthangavel\\simkl-mps\\simkl_mps.log\nmacOS: ~/Library/Application Support/kavinthangavel/simkl-mps/simkl_mps.log  \nLinux: ~/.local/share/kavinthangavel/simkl-mps/simkl_mps.log\n</code></pre> <p>Important log patterns: - <code>Window title detected:</code> - Shows what window titles are being monitored - <code>Identified movie:</code> - Successful media identification - <code>Progress:</code> - Current playback position and duration - <code>Marked as watched:</code> - Successful scrobbling - <code>ERROR:</code> - Problems that need attention</p>"}]}