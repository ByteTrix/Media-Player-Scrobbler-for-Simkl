{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MPS for SIMKL","text":"<p>MPS for SIMKL (Media Player Scrobbler for SIMKL) is an automatic scrobbler for SIMKL that tracks your media playback activity across various media players and updates your SIMKL account accordingly.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Automatic Tracking: Detects when you're watching media and scrobbles it to your SIMKL account</li> <li>Multiple Media Players: Supports VLC, MPV, MPC-HC, and PotPlayer</li> <li>System Tray Integration: Runs quietly in the background with a convenient system tray icon</li> <li>Cross-Platform: Works on Windows, macOS, and Linux</li> <li>Offline Mode: Records your watched media even when offline and syncs later</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Install MPS for SIMKL: <code>pip install simkl-mps</code></li> <li>Run the application: <code>simkl-mps</code></li> <li>Authenticate with your SIMKL account</li> <li>Play media in your favorite player</li> <li>Watch your SIMKL profile update automatically!</li> </ol>"},{"location":"#documentation","title":"Documentation","text":"<p>For detailed information, check out the following sections:</p> <ul> <li>Installation: Get up and running quickly</li> <li>Configuration: Configure the tracker to your preferences</li> <li>Usage: Learn how to use the application effectively</li> <li>Media Players: See which media players are supported</li> <li>Troubleshooting: Fix common issues</li> </ul>"},{"location":"#license","title":"License","text":"<p>MPS for SIMKL is licensed under the GNU GPL v3 License. See the LICENSE file for details.</p>"},{"location":"configuration/","title":"\u2699\ufe0f Advanced Configuration","text":"<p>This document describes advanced configuration options for Media Player Scrobbler for SIMKL.</p>"},{"location":"configuration/#configuration-files","title":"\ud83d\udcc1 Configuration Files","text":"<p>The primary configuration is stored in <code>.simkl_mps.env</code> in the application data directory:</p> <ul> <li>Windows: <code>%APPDATA%\\kavinthangavel\\media-player-scrobbler-for-simkl\\.simkl_mps.env</code></li> <li>macOS: <code>~/Library/Application Support/kavinthangavel/media-player-scrobbler-for-simkl/.simkl_mps.env</code></li> <li>Linux: <code>~/.local/share/kavinthangavel/media-player-scrobbler-for-simkl/.simkl_mps.env</code></li> </ul>"},{"location":"configuration/#environment-variables","title":"\ud83d\udd27 Environment Variables","text":"<p>You can customize behavior by setting these environment variables:</p> Variable Purpose Default <code>SIMKL_CLIENT_ID</code> Custom API client ID Built-in ID <code>SIMKL_ACCESS_TOKEN</code> Manual access token Auto-generated <code>SIMKL_LOG_LEVEL</code> Logging verbosity (DEBUG, INFO, etc.) INFO <code>SIMKL_POLL_INTERVAL</code> Window check frequency (seconds) 10 <code>SIMKL_COMPLETION_THRESHOLD</code> % to mark as watched 80"},{"location":"configuration/#application-data","title":"\ud83d\udcca Application Data","text":"<p>Key files and their locations:</p> File Purpose Location <code>simkl_mps.log</code> Main application log APP_DATA_DIR/kavinthangavel/media-player-scrobbler-for-simkl <code>playback_log.jsonl</code> Detailed event log APP_DATA_DIR/kavinthangavel/media-player-scrobbler-for-simkl <code>media_cache.json</code> Movie info cache APP_DATA_DIR/kavinthangavel/media-player-scrobbler-for-simkl <code>backlog.json</code> Offline queue APP_DATA_DIR/kavinthangavel/media-player-scrobbler-for-simkl <code>.simkl_mps.env</code> Configuration APP_DATA_DIR/kavinthangavel/media-player-scrobbler-for-simkl <p>Where <code>APP_DATA_DIR</code> is platform-specific: - Windows: <code>%APPDATA%</code> - macOS: <code>~/Library/Application Support</code> - Linux: <code>~/.local/share</code></p>"},{"location":"configuration/#advanced-settings","title":"\ud83d\udee0\ufe0f Advanced Settings","text":""},{"location":"configuration/#customizing-the-completion-threshold","title":"\u23f1\ufe0f Customizing the Completion Threshold","text":"<p>By default, movies are marked as watched after reaching 80% completion. To change this:</p> <ol> <li>Create or edit <code>.simkl_mps.env</code> in the application data directory</li> <li>Add: <code>SIMKL_COMPLETION_THRESHOLD=85</code> (or your preferred percentage)</li> </ol>"},{"location":"configuration/#custom-polling-interval","title":"\u23f2\ufe0f Custom Polling Interval","text":"<p>Adjust how frequently the application checks for active movie windows:</p> <pre><code>SIMKL_POLL_INTERVAL=5  # Check every 5 seconds (default is 10)\n</code></pre> <p>Lower values provide more responsive detection but use slightly more resources.</p>"},{"location":"configuration/#logging-levels","title":"\ud83d\udcdd Logging Levels","text":"<p>Control the verbosity of logging:</p> <pre><code>SIMKL_LOG_LEVEL=DEBUG  # Verbose logging for troubleshooting\n</code></pre> <p>Available levels (from most to least verbose): - <code>DEBUG</code>: All messages, including detailed debugging information - <code>INFO</code>: General operational events (default) - <code>WARNING</code>: Potential issues that don't prevent operation - <code>ERROR</code>: Errors that prevent specific operations - <code>CRITICAL</code>: Critical errors that prevent application function</p>"},{"location":"configuration/#custom-simkl-api-client","title":"\ud83d\udd11 Custom Simkl API Client","text":"<p>To use your own Simkl API client:</p> <ol> <li>Register a new client at https://simkl.com/settings/developer/</li> <li>Set the redirect URL to <code>urn:ietf:wg:oauth:2.0:oob</code></li> <li>Add to configuration:    <pre><code>SIMKL_CLIENT_ID=your_client_id_here\n</code></pre></li> </ol>"},{"location":"configuration/#overriding-cache-directory","title":"\ud83d\udcc2 Overriding Cache Directory","text":"<p>To store application data in a custom location:</p> <pre><code>SIMKL_APP_DATA_DIR=/path/to/custom/directory\n</code></pre>"},{"location":"configuration/#configuration-for-development","title":"\ud83e\uddea Configuration for Development","text":"<p>When developing or testing:</p> <pre><code># Enable debug logging\nSIMKL_LOG_LEVEL=DEBUG\n\n# Faster polling for testing\nSIMKL_POLL_INTERVAL=2\n\n# Testing mode (prevents actual API calls)\nSIMKL_TESTING_MODE=True\n</code></pre>"},{"location":"configuration/#manual-configuration-reset","title":"\ud83d\udd04 Manual Configuration Reset","text":"<p>To completely reset the configuration:</p> <ol> <li>Close all instances of the application</li> <li>Delete the application data directory</li> <li>Reinitialize with <code>media-player-scrobbler-for-simkl init</code></li> </ol>"},{"location":"development/","title":"\ud83d\udcbb Development Guide","text":"<p>This document provides information for developers who want to contribute to Media Player Scrobbler for SIMKL.</p>"},{"location":"development/#project-structure","title":"\ud83d\udcc2 Project Structure","text":"<pre><code>simkl-movie-tracker/\n\u251c\u2500\u2500 docs/                    # Documentation\n\u251c\u2500\u2500 simkl_mps/         # Main package\n\u2502   \u251c\u2500\u2500 __init__.py          # Package initialization\n\u2502   \u251c\u2500\u2500 backlog_cleaner.py   # Handles offline queue\n\u2502   \u251c\u2500\u2500 cli.py               # Command-line interface\n\u2502   \u251c\u2500\u2500 main.py              # Application entry point\n\u2502   \u251c\u2500\u2500 media_cache.py       # Movie info caching\n\u2502   \u251c\u2500\u2500 media_tracker.py     # Main tracking coordination\n\u2502   \u251c\u2500\u2500 monitor.py           # Window monitoring\n\u2502   \u251c\u2500\u2500 movie_scrobbler.py   # Movie tracking and Simkl integration\n\u2502   \u251c\u2500\u2500 service_manager.py   # System service management\n\u2502   \u251c\u2500\u2500 service_runner.py    # Background service implementation\n\u2502   \u251c\u2500\u2500 simkl_api.py         # Simkl API interactions\n\u2502   \u251c\u2500\u2500 tray_app.py          # System tray application\n\u2502   \u251c\u2500\u2500 window_detection.py  # Cross-platform window detection\n\u2502   \u251c\u2500\u2500 players/             # Media player integrations\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 mpc.py           # MPC-HC/BE integration\n\u2502   \u2502   \u251c\u2500\u2500 mpv.py           # MPV integration\n\u2502   \u2502   \u251c\u2500\u2500 potplayer.py     # PotPlayer integration\n\u2502   \u2502   \u2514\u2500\u2500 vlc.py           # VLC integration\n\u2502   \u2514\u2500\u2500 utils/               # Utility functions and constants\n\u251c\u2500\u2500 tests/                   # Test suite\n\u251c\u2500\u2500 .gitignore               # Git ignore patterns\n\u251c\u2500\u2500 pyproject.toml           # Project metadata and dependencies\n\u251c\u2500\u2500 README.md                # Project overview\n\u2514\u2500\u2500 LICENSE                  # License information\n</code></pre>"},{"location":"development/#development-setup","title":"\ud83d\ude80 Development Setup","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/kavinthangavel/simkl-movie-tracker.git\ncd simkl-movie-tracker\n</code></pre></p> </li> <li> <p>Set up the development environment:    <pre><code># Using Poetry (recommended)\npoetry install --with dev\n\n# Or using pip\npip install -e \".[dev]\"\n</code></pre></p> </li> <li> <p>Set up pre-commit hooks (optional):    <pre><code>pre-commit install\n</code></pre></p> </li> </ol>"},{"location":"development/#running-tests","title":"\ud83e\uddea Running Tests","text":"<pre><code># Run tests with pytest\npoetry run pytest\n\n# Run tests with coverage\npoetry run pytest --cov=simkl_mps\n\n# Run specific test file\npoetry run pytest tests/test_specific_file.py\n</code></pre>"},{"location":"development/#code-style","title":"\ud83d\udcdd Code Style","text":"<p>This project follows PEP 8 style guidelines. Use flake8 to check your code:</p> <pre><code>poetry run flake8 simkl_mps\n</code></pre>"},{"location":"development/#adding-a-new-media-player","title":"\u2795 Adding a New Media Player","text":"<p>To add support for a new media player:</p> <ol> <li>Create a new file in the <code>players/</code> directory (e.g., <code>simkl_mps/players/new_player.py</code>)</li> <li>Implement a class that follows the player integration interface:    <pre><code>class NewPlayerIntegration:\n    def __init__(self):\n        # Initialize player connection\n        pass\n\n    def get_position_duration(self, process_name=None):\n        # Return (position_seconds, duration_seconds) tuple or (None, None)\n        pass\n</code></pre></li> <li>Add the player to <code>players/__init__.py</code></li> <li>Update window detection to recognize the player in <code>window_detection.py</code></li> </ol>"},{"location":"development/#building-and-publishing","title":"\ud83d\udce6 Building and Publishing","text":"<pre><code># Build distribution packages\npoetry build\n\n# Publish to PyPI (requires credentials)\npoetry publish\n</code></pre>"},{"location":"development/#pull-request-process","title":"\ud83d\udd04 Pull Request Process","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch: <code>git checkout -b feature/amazing-feature</code></li> <li>Make your changes and commit them: <code>git commit -m 'Add amazing feature'</code></li> <li>Push to the branch: <code>git push origin feature/amazing-feature</code></li> <li>Open a Pull Request against the main repository</li> </ol>"},{"location":"development/#api-access","title":"\ud83d\udd11 API Access","text":"<p>For development, you can use the default client ID or register your own:</p> <ol> <li>Go to https://simkl.com/settings/developer/</li> <li>Create a new application</li> <li>Set the redirect URL to <code>urn:ietf:wg:oauth:2.0:oob</code></li> <li>Use the client ID in your development environment:    <pre><code>SIMKL_CLIENT_ID=your_client_id\n</code></pre></li> </ol>"},{"location":"development/#debugging-tips","title":"\ud83d\udd0d Debugging Tips","text":"<ul> <li>Use the <code>--debug</code> flag to enable detailed logging: <code>simkl-mps start --debug</code></li> <li>Check logs in the application data directory</li> <li>Use Python's debugger (pdb) or an IDE like PyCharm or VS Code for step-by-step debugging</li> <li>Test player integration separately using the player-specific test scripts</li> </ul>"},{"location":"development/#architecture-overview","title":"\ud83c\udfd7\ufe0f Architecture Overview","text":"<p>Media Player Scrobbler for SIMKL uses a modular architecture:</p> <ol> <li>\ud83e\ude9f Window Detection Layer: Platform-specific code to detect media player windows</li> <li>\ud83c\udfae Media Player Integration Layer: Interfaces with specific players to get playback information</li> <li>\ud83c\udfac Movie Identification Layer: Parses titles and identifies movies via Simkl API</li> <li>\ud83d\udcca Progress Tracking Layer: Monitors playback and determines completion</li> <li>\ud83d\udd0c Simkl API Layer: Handles authentication and scrobbling to Simkl</li> </ol> <p>This separation allows for easy maintenance and extension of individual components.</p>"},{"location":"development/#architecture-diagram","title":"Architecture Diagram","text":"<pre><code>graph TD\n    A[Window Detection] --&gt;|Active Windows| B[Player Recognition]\n    B --&gt;|Window Info| C[Title Extraction]\n    C --&gt;|Movie Title| D[guessit Parser]\n    D --&gt;|Parsed Info| E[Simkl Search]\n    E --&gt;|Movie ID| F[Progress Tracker]\n    F --&gt;|Position Updates| G{Completion Check}\n    G --&gt;|&gt;80%| H[Mark as Watched]\n    G --&gt;|&lt;80%| F\n\n    I[Player Integration] --&gt;|Position Data| F\n    J[OS-specific APIs] --&gt; A\n\n    style A fill:#d5f5e3,stroke:#333,stroke-width:2px\n    style H fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style I fill:#d5eef7,stroke:#333,stroke-width:2px\n    style J fill:#f7dc6f,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"installation/","title":"\ud83d\udce5 Installation Guide","text":"<p>This guide covers detailed installation instructions for Media Player Scrobbler for SIMKL across different platforms.</p>"},{"location":"installation/#prerequisites","title":"\u2705 Prerequisites","text":"<ul> <li>Python 3.9 or higher</li> <li>pip (Python package manager)</li> </ul>"},{"location":"installation/#standard-installation","title":"\ud83d\ude80 Standard Installation","text":""},{"location":"installation/#windows","title":"Windows","text":"<ol> <li>Download this And Install Latest Release </li> <li>Follow the Terminal Instructions and Authenticate SIMKL</li> <li>Look at the Tray For MSP for Simkl.exe</li> </ol> <p>or</p> <pre><code># Install using pip\npip install simkl-mps\n\n# Initialize with your Simkl account\nsimkl-mps i    # or: simkl-mps init\n</code></pre> <p>After Installation Setup the Web Interface in Supported Players</p> <p>The initialization process will guide you through authentication with Simkl using a device code. Simply visit the provided URL and enter the code to link the application to your Simkl account.</p>"},{"location":"installation/#platform-specific-requirements","title":"\ud83d\udcbb Platform-Specific Requirements","text":""},{"location":"installation/#macos","title":"macOS","text":"<p>For full functionality: <pre><code># Install optional dependencies (recommended)\npip install \"simkl-mps\"\n</code></pre></p>"},{"location":"installation/#linux","title":"Linux","text":"<p>For window detection and full functionality: <pre><code># Ubuntu/Debian\nsudo apt install wmctrl xdotool plyer\n\n# Fedora\nsudo dnf install wmctrl xdotool plyer\n\n# Arch Linux\nsudo pacman -S wmctrl xdotool plyer\n\n# Install optional dependencies\npip install \"simkl-mps\"\n</code></pre></p>"},{"location":"installation/#alternative-installation-methods","title":"\ud83d\udd04 Alternative Installation Methods","text":""},{"location":"installation/#using-pipx-isolated-environment","title":"Using pipx (Isolated Environment)","text":"<p>pipx installs packages in isolated environments while making their entry points globally available:</p> <pre><code># Install pipx if not already installed\npython -m pip install --user pipx\npython -m pipx ensurepath  # Restart terminal after this\n\n# Install simkl-mps\npipx install simkl-mps\n\n# For macOS specific dependencies\npipx install simkl-mps --extras macos\n\n# For Linux specific dependencies\npipx install simkl-mps --extras linux\n</code></pre>"},{"location":"installation/#development-installation-from-source","title":"Development Installation (from source)","text":"<pre><code># Clone repository\ngit clone https://github.com/kavinthangavel/simkl-mps.git\ncd simkl-mps\n\n# Install with Poetry\npoetry install\n\n# Run commands\npoetry run simkl-mps i    # or: init\npoetry run simkl-mps s    # or: start\n</code></pre>"},{"location":"installation/#verifying-installation","title":"\u2714\ufe0f Verifying Installation","text":"<p>After installation, verify that the application is properly installed:</p> <pre><code>simkl-mps -v    # or: --version\nsimkl-mps V     # or: version\n</code></pre> <p>This will display version information about the installed application.</p>"},{"location":"installation/#starting-the-application","title":"\ud83d\ude80 Starting the Application","text":"<p>There are two ways to run the application:</p> <ol> <li> <p>Background Mode (recommended for daily use): <pre><code>simkl-mps s    # or: simkl-mps start\n</code></pre> This runs the application detached in the background. You can safely close the terminal.</p> </li> <li> <p>Interactive Mode (useful for debugging): <pre><code>simkl-mps t    # or: simkl-mps tray\n</code></pre> This runs the application attached to the terminal, showing logs. The application will stop when you close the terminal.</p> </li> </ol>"},{"location":"media-players/","title":"\ud83c\udfac Supported Media Players","text":"<p>This document details the media players supported by Media Player Scrobbler for SIMKL and how to configure them for optimal tracking.</p>"},{"location":"media-players/#player-compatibility-table","title":"\ud83d\udccb Player Compatibility Table","text":""},{"location":"media-players/#windows","title":"Windows","text":"Media Player Support Status Position Detection VLC Media Player \u2705 Fully Supported \u2705 (with web interface) MPC-HC/BE \u2705 Fully Supported \u2705 (with web interface) MPV Player \u2705 Fully Supported \u2705 (with IPC) PotPlayer \u2705 Fully Supported \u2705 (with WebRemote) Windows Media Player \u2705 Fully Supported \u26a0\ufe0f Title only SMPlayer \u2705 Fully Supported \u26a0\ufe0f Title only KMPlayer \u2705 Fully Supported \u26a0\ufe0f Title only GOM Player \u2705 Fully Supported \u26a0\ufe0f Title only"},{"location":"media-players/#macos","title":"macOS","text":"Media Player Support Status Position Detection VLC Media Player \u2705 Fully Supported \u2705 (with web interface) MPV Player \u2705 Fully Supported \u2705 (with IPC) IINA \u2705 Fully Supported \u26a0\ufe0f Title only QuickTime Player \u2705 Basic Support \u26a0\ufe0f Title only Elmedia Player \u2705 Basic Support \u26a0\ufe0f Title only Movist/Movist Pro \u2705 Basic Support \u26a0\ufe0f Title only"},{"location":"media-players/#linux","title":"Linux","text":"Media Player Support Status Position Detection VLC Media Player \u2705 Fully Supported \u2705 (with web interface) MPV Player \u2705 Fully Supported \u2705 (with IPC) SMPlayer \u2705 Fully Supported \u26a0\ufe0f Title only Totem \u2705 Basic Support \u26a0\ufe0f Title only Celluloid \u2705 Basic Support \u26a0\ufe0f Title only Kaffeine \u2705 Basic Support \u26a0\ufe0f Title only Dragon Player \u2705 Basic Support \u26a0\ufe0f Title only Parole \u2705 Basic Support \u26a0\ufe0f Title only"},{"location":"media-players/#position-detection-methods","title":"\ud83d\udd0d Position Detection Methods","text":"<p>Media Player Scrobbler for SIMKL can detect playback position in two ways:</p> <ol> <li>\ud83c\udfaf Advanced Position Tracking: Gets precise position and duration from the player</li> <li>\ud83d\udcca Basic Title Tracking: Estimates progress based on window focus time</li> </ol> <p>For the best experience, we recommend setting up advanced position tracking.</p>"},{"location":"media-players/#position-tracking-flow","title":"Position Tracking Flow","text":"<pre><code>graph TD\n    A[Media Player] --&gt; B{Has Web Interface?}\n    B --&gt;|Yes| C[Direct API Connection]\n    B --&gt;|No| D[Window Title Monitoring]\n\n    C --&gt;|Get Position/Duration| E[Precise Progress]\n    D --&gt;|Track Focus Time| F[Estimated Progress]\n\n    E --&gt; G{&gt;80% Complete?}\n    F --&gt; G\n\n    G --&gt;|Yes| H[Mark as Watched]\n    G --&gt;|No| I[Continue Tracking]\n\n    style A fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style H fill:#d5f5e3,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"media-players/#player-configuration-for-advanced-tracking","title":"\u2699\ufe0f Player Configuration for Advanced Tracking","text":""},{"location":"media-players/#vlc-media-player","title":"\ud83c\udfb5 VLC Media Player","text":"<ol> <li>Go to Tools &gt; Preferences</li> <li>Select \"All\" settings (bottom left)</li> <li>Navigate to Interface &gt; Main interfaces</li> <li>Check \"Web\" option</li> <li>Must: Set a password in the \"Lua HTTP\" section (use password : simkl)</li> <li>Click \"Save\"</li> <li>Restart VLC</li> </ol> <p>See this Guide for best Understanding : VLC Web Interface</p> <p>Default Address: http://127.0.0.1:8080/ \ud83d\udc48 Open this and Enter the Password You've Set (Make Sure VLC is Opened in Background)</p>"},{"location":"media-players/#mpc-hcbe-windows-only","title":"\ud83c\udfac MPC-HC/BE (Windows only)","text":"<ol> <li>Go to View &gt; Options &gt; Player &gt; Web Interface</li> <li>Check \"Listen on port:\" (default 13579)</li> <li>Click \"OK\"</li> <li>Restart MPC</li> </ol> <p>Default Address: http://127.0.0.1:13579/</p>"},{"location":"media-players/#mpv-player","title":"\ud83d\udcfc MPV Player","text":"<ol> <li>Create or edit <code>mpv.conf</code> in the mpv config directory:</li> <li>Windows: <code>%APPDATA%\\mpv\\mpv.conf</code></li> <li>macOS: <code>~/.config/mpv/mpv.conf</code></li> <li>Linux: <code>~/.config/mpv/mpv.conf</code></li> <li>Add the following lines:    <pre><code># For Unix-based systems (macOS/Linux)\ninput-ipc-server=/tmp/mpvsocket\n\n# For Windows\ninput-ipc-server=\\\\.\\pipe\\mpvsocket\n</code></pre></li> <li>Restart MPV.</li> </ol> <p>This enables advanced position tracking for accurate scrobbling.</p>"},{"location":"media-players/#potplayer-windows-only","title":"\ud83c\udfae PotPlayer (Windows only)","text":"<ol> <li>Open PotPlayer.</li> <li>Go to Preferences (F5) &gt; Others &gt; Web Control Interface.</li> <li>Check \"Listen to HTTP request on port:\" (default is 8080).</li> <li>Click \"Apply\" and \"OK\".</li> <li>Restart PotPlayer.</li> </ol> <p>Default Address: http://127.0.0.1:8080/</p> <p>This enables advanced position tracking for accurate scrobbling.</p>"},{"location":"media-players/#troubleshooting-player-integration","title":"\ud83d\udd27 Troubleshooting Player Integration","text":""},{"location":"media-players/#vlc","title":"VLC","text":"<ul> <li>If tracking doesn't work, verify web interface is enabled in VLC preferences</li> <li>Try different port if 8080 is already in use (change in VLC settings)</li> <li>On Linux, ensure firewall allows connections to the port</li> </ul>"},{"location":"media-players/#mpv","title":"MPV","text":"<ul> <li>Verify the IPC socket/pipe path matches what's in your configuration</li> <li>For Windows, make sure the pipe name is correct: <code>\\\\.\\pipe\\mpvsocket</code></li> <li>For Unix, check permissions on <code>/tmp/mpvsocket</code></li> </ul>"},{"location":"media-players/#general-tips","title":"General Tips","text":"<ul> <li>Ensure media filenames include the movie title in a recognizable format</li> <li>For better matching, include the release year: <code>Movie Name (2023).mp4</code></li> <li>Check the application logs if a specific player isn't being detected</li> </ul>"},{"location":"todo/","title":"\ud83d\udccb Todo List","text":"<p>This document tracks both completed features and planned improvements for Media Player Scrobbler for SIMKL.</p>"},{"location":"todo/#completed","title":"\u2705 Completed","text":"<ul> <li>[x] \ud83c\udf0d Cross-platform support (Windows, macOS, Linux)</li> <li>[x] \ud83c\udfae Integration with multiple media players</li> <li>[x] \ud83d\udd04 ~~Background service implementation~~</li> <li>[x] \ud83d\udcca Position tracking for media players with web interfaces</li> <li>[x] \ud83d\udda5\ufe0f System tray application</li> <li>[x] \ud83d\udd0c Offline mode with backlog handling</li> <li>[x] \ud83e\udde0 Smart movie detection using guessit library</li> <li>[x] \ud83d\udce6 Package distribution via PyPI</li> <li>[x] \ud83d\ude19 New Icon/Logo and Name</li> <li>[x] \ud83d\uddb1\ufe0f Enhance the tray application with more controls</li> </ul>"},{"location":"todo/#in-progress","title":"\ud83d\udea7 In Progress","text":"<ul> <li>[x] \ud83c\udfe6 Create installers for cross platform(Windows only Tested)</li> <li>[ ] \ud83d\udeb9 Option to User Set Completion Percentage and Edit it Later</li> <li>[ ] \ud83d\udcf1 Improve notification system</li> <li>[ ] \ud83e\ude9c Testing Cross-Platform</li> </ul>"},{"location":"todo/#planned-features","title":"\ud83d\udcdd Planned Features","text":""},{"location":"todo/#short-term","title":"Short Term","text":"<ul> <li>[ ] \ud83d\udd10 Enhanced authentication flow</li> <li>[ ] \ud83e\uddea Create comprehensive automated test suite</li> <li>[ ] \ud83d\udd0e Add option to manually correct misidentified movies</li> </ul>"},{"location":"todo/#medium-term","title":"Medium Term","text":"<ul> <li>[ ] \ud83d\udd04 Two-way sync (mark as watched on Simkl affects local status)</li> </ul>"},{"location":"todo/#long-term-ideas","title":"Long Term / Ideas","text":"<ul> <li>[ ] \ud83d\udcfa Add support for TV shows/Anime tracking</li> <li>[ ] \ud83c\udfac Integration with more streaming platforms (browser extensions)</li> <li>[ ] \ud83d\udc65 Multi-user support for shared computers</li> <li>[ ] \ud83d\udd0d Advanced search and filtering of watched content</li> </ul>"},{"location":"todo/#contribution-opportunities","title":"\ud83e\udd1d Contribution Opportunities","text":"<p>These are good starting points for new contributors:</p> <ul> <li>[ ] \ud83d\udcda Improve documentation with more examples</li> <li>[ ] \ud83c\udf10 Add translations for UI elements</li> <li>[ ] \ud83d\udc1b Fix known issues from GitHub Issues</li> <li>[ ] \u26a1 Performance optimizations</li> <li>[ ] \ud83e\uddea Create additional tests</li> </ul> <p>Note: Timeline is approximate and subject to change based on contributor availability.</p>"},{"location":"troubleshooting/","title":"\ud83d\udd27 Troubleshooting Guide","text":"<p>This document provides solutions for common issues with Media Player Scrobbler for SIMKL.</p>"},{"location":"troubleshooting/#common-issues-and-solutions","title":"\ud83d\udea8 Common Issues and Solutions","text":""},{"location":"troubleshooting/#installation-problems","title":"\ud83d\udce5 Installation Problems","text":"Issue Solution \"Command not found\" after installation Ensure Python scripts directory is in your PATH Installation fails with permission error Use <code>pip install --user simkl-mps</code> or create a virtual environment Poetry installation fails Ensure you have the latest version of Poetry (<code>poetry self update</code>)"},{"location":"troubleshooting/#authentication-issues","title":"\ud83d\udd10 Authentication Issues","text":"Issue Solution Authentication fails Check internet connection; verify correct PIN entry \"Invalid client ID\" error Your custom client ID might be incorrect; remove it from config Token expired or invalid Run <code>simkl-mps i</code> (or <code>init</code>) again to re-authenticate"},{"location":"troubleshooting/#movie-detection-problems","title":"\ud83d\udd0d Movie Detection Problems","text":"Issue Solution Movies not detected Ensure media player shows filename in window title Incorrect movie matched Include year in filename: \"Movie.Title.2023.mp4\" No detection in fullscreen Some players hide window title in fullscreen; use windowed mode Multiple files show as one movie Ensure filenames are clearly different"},{"location":"troubleshooting/#playback-tracking-issues","title":"\u23ef\ufe0f Playback Tracking Issues","text":"Issue Solution Position not tracking Configure player web interface (see Media Players) Movies not marked as watched Check completion threshold setting; verify internet connection Tracking stops unexpectedly Check logs for errors; ensure player keeps window title visible VLC position not detected Verify web interface is enabled and accessible"},{"location":"troubleshooting/#platform-specific-issues","title":"\ud83d\udcbb Platform-Specific Issues","text":""},{"location":"troubleshooting/#windows","title":"Windows","text":"Issue Solution Media player not recognized Verify player is in the supported list Application doesn't start Run <code>simkl-mps t</code> (or <code>tray</code>) to see error messages"},{"location":"troubleshooting/#macos","title":"macOS","text":"Issue Solution AppleScript permission errors Grant accessibility permissions in System Preferences &gt; Security &amp; Privacy &gt; Privacy &gt; Accessibility Window detection failures Install optional dependencies: <code>pip install \"simkl-mps[macos]\"</code>"},{"location":"troubleshooting/#linux","title":"Linux","text":"Issue Solution Window detection not working Install required utilities: <code>sudo apt install xdotool wmctrl</code> D-Bus connection errors Ensure you're running in a standard desktop environment"},{"location":"troubleshooting/#diagnostic-commands","title":"\ud83d\udd2c Diagnostic Commands","text":"<p>Use these commands to help diagnose problems:</p> <pre><code># Check installation\npip show simkl-mps\n\n# Check version information\nsimkl-mps -v       # or: --version\nsimkl-mps V        # or: version\n\n# Run with debug logging in background\nsimkl-mps s --debug    # or: start --debug\n\n# Run with debug logging in terminal\nsimkl-mps t --debug    # or: tray --debug\n\n# Check logs (Windows)\ntype %APPDATA%\\kavinthangavel\\simkl-mps\\simkl_mps.log\n\n# Check logs (macOS/Linux)\ncat ~/.local/share/kavinthangavel/simkl-mps/simkl_mps.log\n\n# Test API connectivity (Windows PowerShell)\nInvoke-WebRequest -Uri https://api.simkl.com/ -Method Head\n\n# Test API connectivity (macOS/Linux)\ncurl -I https://api.simkl.com/\n</code></pre>"},{"location":"troubleshooting/#log-analysis","title":"\ud83d\udcca Log Analysis","text":"<p>Common log messages and their meanings:</p> Log Message Meaning \"No active video player window found\" Normal when no player is running \"Failed to connect to Simkl API\" Network or authentication issue \"Movie title not found in window title\" Player doesn't expose title or format is unrecognized \"Could not parse movie title\" Filename format couldn't be understood \"Movie marked as watched\" Success! Movie was scrobbled \"Added to backlog\" Will be marked as watched when internet connection is restored"},{"location":"troubleshooting/#resetting-the-application","title":"\ud83d\udd04 Resetting the Application","text":"<p>If you need a fresh start:</p> <ol> <li>Close all instances of the application</li> <li>Delete the application data directory:</li> <li>Windows: <code>%APPDATA%\\kavinthangavel\\simkl-mps</code></li> <li>macOS: <code>~/Library/Application Support/kavinthangavel/simkl-mps</code></li> <li>Linux: <code>~/.local/share/kavinthangavel/simkl-mps</code></li> <li>Reinstall: <code>pip install --force-reinstall simkl-mps</code></li> <li>Reinitialize: <code>simkl-mps i</code> (or <code>init</code>)</li> </ol>"},{"location":"troubleshooting/#getting-help","title":"\ud83c\udd98 Getting Help","text":"<p>If you've tried the solutions above and still have issues:</p> <ol> <li>Run in debug mode to get detailed logs:    <pre><code>simkl-mps t --debug    # or: tray --debug\n</code></pre></li> <li>Open a GitHub issue with:</li> <li>Your operating system and version</li> <li>The application version (<code>simkl-mps -v</code> or <code>--version</code>)</li> <li>Relevant log excerpts</li> <li>Steps to reproduce the problem</li> </ol>"},{"location":"usage/","title":"\ud83c\udfae Usage Guide","text":"<p>This guide covers the various ways to use MPS for SIMKL (Media Player Scrobbler for SIMKL).</p>"},{"location":"usage/#basic-commands","title":"\ud83d\udccb Basic Commands","text":"<pre><code># Initial setup (only needed once)\nsimkl-mps i        # or: simkl-mps init\n\n# Start tracking in background mode\nsimkl-mps s        # or: simkl-mps start\n\n# Launch in system tray (shows logs)\nsimkl-mps t        # or: simkl-mps tray\n\n# Show version information\nsimkl-mps -v       # or: simkl-mps --version\nsimkl-mps V        # or: simkl-mps version\n\n# Show all available commands\nsimkl-mps --help\n</code></pre> <p>Note: The application is displayed as \"MPS for SIMKL\" in the system tray and other user interfaces, while the command-line tool name remains <code>simkl-mps</code>.</p>"},{"location":"usage/#run-modes","title":"\ud83d\ude80 Run Modes","text":""},{"location":"usage/#background-mode","title":"\ud83d\udd04 Background Mode","text":"<pre><code>simkl-mps s        # or: simkl-mps start\n</code></pre> <p>Runs the tray application detached in the background. This is the standard way to run the application for regular usage. You can safely close the terminal after starting.</p>"},{"location":"usage/#system-tray-mode","title":"\ud83d\udda5\ufe0f System Tray Mode","text":"<pre><code>simkl-mps t        # or: simkl-mps tray\n</code></pre> <p>Runs the tray application attached to the current terminal, showing logs. The application will stop when you close the terminal. This mode allows you to: - Start/stop monitoring - Process the backlog - View logs - Exit the application</p>"},{"location":"usage/#command-line-arguments","title":"\ud83d\udcbb Command-Line Arguments","text":"<pre><code># Show detailed help\nsimkl-mps --help\n\n# Show version information\nsimkl-mps -v       # or: simkl-mps --version\nsimkl-mps V        # or: simkl-mps version\n\n# Run with debug logging\nsimkl-mps s --debug    # or: simkl-mps start --debug\n\n# Use a specific config file\nsimkl-mps s --config /path/to/config.env    # or: simkl-mps start --config /path/to/config.env\n</code></pre>"},{"location":"usage/#log-files","title":"\ud83d\udcc1 Log Files","text":"<p>Check these files for troubleshooting:</p> <pre><code># Main application log\n[APP_DATA_DIR]/kavinthangavel/simkl-mps/media-player-scrobbler-for-simkl.log\n\n# Detailed playback events\n[APP_DATA_DIR]/kavinthangavel/simkl-mps/playback_log.jsonl\n</code></pre> <p>Where <code>[APP_DATA_DIR]</code> is platform-specific: - Windows: <code>%APPDATA%</code> - macOS: <code>~/Library/Application Support</code> - Linux: <code>~/.local/share</code></p>"},{"location":"usage/#environment-variables","title":"\ud83d\udd27 Environment Variables","text":"<p>You can set these environment variables to customize behavior:</p> Variable Purpose Default <code>SIMKL_CLIENT_ID</code> Custom API client ID Built-in ID <code>SIMKL_ACCESS_TOKEN</code> Manual access token Auto-generated <code>SIMKL_LOG_LEVEL</code> Logging verbosity (DEBUG, INFO, etc.) INFO <code>SIMKL_POLL_INTERVAL</code> Window check frequency (seconds) 10 <code>SIMKL_COMPLETION_THRESHOLD</code> % to mark as watched 80"},{"location":"usage/#recommended-workflow","title":"\ud83d\udd0d Recommended Workflow","text":"<ol> <li>Run <code>simkl-mps i</code> (or <code>init</code>) to set up your Simkl account</li> <li>Test with <code>simkl-mps t</code> (or <code>tray</code>) to ensure detection works and view logs</li> <li>For daily use, run <code>simkl-mps s</code> (or <code>start</code>) to launch in background mode</li> </ol>"},{"location":"usage/#operation-flow","title":"\ud83d\udcca Operation Flow","text":"<p>The following diagram illustrates how the different run modes operate:</p> <pre><code>graph TD\n    A[MPS for SIMKL] --&gt; B[Background Mode]\n    A --&gt; C[System Tray Mode]\n\n    B --&gt;|Detached| F[Background Tracking]\n    C --&gt;|Terminal Attached| G[Interactive Control]\n\n    F --&gt; J[Simkl API]\n    G --&gt; J\n\n    style A fill:#f9d5e5,stroke:#333,stroke-width:2px\n    style J fill:#d5f5e3,stroke:#333,stroke-width:2px\n</code></pre>"}]}